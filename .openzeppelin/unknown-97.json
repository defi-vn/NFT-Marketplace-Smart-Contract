{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x31d7c829D3beE1fA3616041cDB1f8349c1723253",
      "txHash": "0xea87536b634b6edb5e19588a55fcceea3f851081324cd2d9c611737d81bbed35",
      "kind": "uups"
    },
    {
      "address": "0xD6623AF04Eb5ca1977a39C52acC384adb9EcD7dA",
      "txHash": "0x8a883b38c73efe95e26c8639cdc0a390bcaff1cf5297f83b5338fd8bbf83081d",
      "kind": "uups"
    },
    {
      "address": "0xfBa7bFDbFA769cD1C9CF977Dada1131F36F362A1",
      "txHash": "0xfa3fd49304f17a0f28427e286d6e2647c36f5ed30b357d07c15f07b0f8e8e06f",
      "kind": "uups"
    },
    {
      "address": "0x737Ea5C8bBfc958f6b1BaE95F7B63Fa247c57a50",
      "txHash": "0xa2a1d64358fb35bccd90bb93242f51c669d5dd67d68af3d549f4f4a9bc506b14",
      "kind": "uups"
    },
    {
      "address": "0x5fE24E0eA1bEFdbdeb12A64b920a559F5B6d19EE",
      "txHash": "0x4bcca0fba638b21d23fddd1da0a75fe9c2ec5f35f84d2b89d3c9f91bb9960097",
      "kind": "uups"
    },
    {
      "address": "0xFb8586E8BF73810294c15C6Ab6DD5E36dcC34F6D",
      "txHash": "0xa2bed16b27d4e820060af783627b56214843eb79e970bdffff9799f568fd8760",
      "kind": "uups"
    },
    {
      "address": "0x23FEdC388a7c61BB8d277486d3E9a8fC88c6c5F9",
      "txHash": "0xdd3c3ea9dd12e418b74071e4ef9f45f7a527ced8d27829b6aa8883011c851b6b",
      "kind": "uups"
    },
    {
      "address": "0x905ECD76dD7f3D3F7D784AE6E828817532adeBaC",
      "txHash": "0x5f6fdd54166c6d940c6617a6fbe420411ebff62fa23493cda7f5b7978532ead2",
      "kind": "uups"
    },
    {
      "address": "0xf45F328f5d4b780180D62DC6290e5f8f91c4C9cE",
      "txHash": "0x2d019b56ee68d99257fa7f63d17fcde2c62aab6a7dc4ffdaaef23ab4141ec7fd",
      "kind": "uups"
    },
    {
      "address": "0xe34Dd33C05125c5DBDea31A1DF96738b8c03Ca03",
      "txHash": "0x1fa9a783c49570d9bf38e73b5a8461cc895e9c87bc88f2ff657bcb6d7542e95c",
      "kind": "uups"
    },
    {
      "address": "0xf656d49A16AE778c8A0D1271f66ba6f475790bb5",
      "txHash": "0x0b4441474feabb3d8b894b83f478b059489b21c29c1a8f6897fdd8fbcaf42756",
      "kind": "uups"
    },
    {
      "address": "0x46dF77abf626C28714bB096829Ee886f6473afb8",
      "txHash": "0x58bb47908aa0a4a4b003057ec199fe43eb72d7977ff5084874d4c9b0a72f6484",
      "kind": "uups"
    },
    {
      "address": "0x4DDc1Fb968D0a5E4A172A75aB195edb5e041Feb4",
      "txHash": "0xbcfd740f20c1782f517d76bd08aa15ae4774570834f0fb69b3b963f313f5c57b",
      "kind": "uups"
    },
    {
      "address": "0x38aa98F591CAc349F6Be8bB9bc8A3762D367E4FF",
      "txHash": "0xfd0cc9257f4a141ecb844d23dd28e6a05a43499e40dabd88c5b3af721e2ecc93",
      "kind": "uups"
    },
    {
      "address": "0xAEaC115355E0bE955F301645f388d1571FF32908",
      "txHash": "0x66de3adc326af0aca65eed0b42b4714af111b1dbef4c8445e7f274de61c34e72",
      "kind": "uups"
    },
    {
      "address": "0x8D3F2Cf5CbFeB1C5c6B92032F4fdE5e4d92E04dd",
      "txHash": "0x257340f57ea156266604fa283cafea0f43b4207ae258c5b7240e80336c8c6d3b",
      "kind": "uups"
    },
    {
      "address": "0x4F9cA14A576F903E8743787034c5693a11DCB1c1",
      "txHash": "0x27269f3a1e273a4c6d293f315cf2207ed2961fc9b29cea47c58a779bc0bc64e2",
      "kind": "uups"
    }
  ],
  "impls": {
    "a290998c55758506a7e9e6b257afd134086414e6d945b2a9fa801d4aa8f83484": {
      "address": "0x1C50d6FCEab16f36dCcf22153a6083E817da864a",
      "txHash": "0xe180d65de1edd5d5126b2b1e1a9b76fbfb04d6ac8f40e302f731df2fdda0021b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionsByOwner",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_contract(DefiForYouNFT)4888))",
            "src": "contracts/DefiForYouNFTFactory.sol:24"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "numberOfCollectionByOwner",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DefiForYouNFTFactory.sol:26"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_contract(DefiForYouNFT)4888))": {
            "label": "mapping(address => mapping(uint256 => contract DefiForYouNFT))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_contract(DefiForYouNFT)4888)": {
            "label": "mapping(uint256 => contract DefiForYouNFT)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(DefiForYouNFT)4888": {
            "label": "contract DefiForYouNFT"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "601ad4e1ecf3eba08310e872faf3f3caee9bdb00657d47821d5ebe9bb280f325": {
      "address": "0x10f80448493F8Cc7E4631e1ddDBB27D691aD4789",
      "txHash": "0xa784b961bd78eb305fc0ef69fe7867e260105f91029d5052cb4ed1a76118e898",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionsByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)5477)dyn_storage)",
            "src": "contracts\\DefiForYouNFTFactory.sol:24"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "whitelistedFeeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\DefiForYouNFTFactory.sol:25"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionCreatingFee",
            "type": "t_uint256",
            "src": "contracts\\DefiForYouNFTFactory.sol:27"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts\\DefiForYouNFTFactory.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)5477)dyn_storage)": {
            "label": "mapping(address => contract DefiForYouNFT[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_contract(DefiForYouNFT)5477)dyn_storage": {
            "label": "contract DefiForYouNFT[]"
          },
          "t_contract(DefiForYouNFT)5477": {
            "label": "contract DefiForYouNFT"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a210c8b085589b05e086c92350b8e6b2b2965180d3c593012f7f977598f440b3": {
      "address": "0xf43523eD98401018f230AcdD7bd2162D4d67e456",
      "txHash": "0x00a0b47db4a9e56866f266f81e863f709874a1c4e0291f3d0683b3d07fe76aed",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionsByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)5048)dyn_storage)",
            "src": "contracts/DefiForYouNFTFactory.sol:24"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "whitelistedFeeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/DefiForYouNFTFactory.sol:25"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionCreatingFee",
            "type": "t_uint256",
            "src": "contracts/DefiForYouNFTFactory.sol:27"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/DefiForYouNFTFactory.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)5048)dyn_storage)": {
            "label": "mapping(address => contract DefiForYouNFT[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_contract(DefiForYouNFT)6518)dyn_storage": {
            "label": "contract DefiForYouNFT[]"
          },
          "t_contract(DefiForYouNFT)6518": {
            "label": "contract DefiForYouNFT"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c51b36068b891c77ba23ecef2ecd1ed38b5a165368095272ff35cf2ccab3cf56": {
      "address": "0x45ef7DF638Cb3fBE2d8B4710A1243AC9AE629214",
      "txHash": "0x26826065cf18e5059ab2d63b75e72bb4600141f1eb16560fa3d4c5ef5f2b83b3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionsByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)6518)dyn_storage)",
            "src": "contracts\\DefiForYouNFTFactory.sol:24"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "whitelistedFeeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\DefiForYouNFTFactory.sol:25"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionCreatingFee",
            "type": "t_uint256",
            "src": "contracts\\DefiForYouNFTFactory.sol:27"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts\\DefiForYouNFTFactory.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)6518)dyn_storage)": {
            "label": "mapping(address => contract DefiForYouNFT[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_contract(DefiForYouNFT)6518)dyn_storage": {
            "label": "contract DefiForYouNFT[]"
          },
          "t_contract(DefiForYouNFT)6518": {
            "label": "contract DefiForYouNFT"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "decb1bbcab709ed7480fc3ef00797456cd8848e804d82e6e3b8af57d71178309": {
      "address": "0x9722eE96Fd1b5f9C7949599A8033D77063257BAB",
      "txHash": "0x9ef4f8ed6e72874f50904c3a92305e1fc134c528afdc5c603bb818adc5abd23a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/DefiForYouNFTFactory.sol:25"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionCreatingFee",
            "type": "t_uint256",
            "src": "contracts/DefiForYouNFTFactory.sol:26"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "whitelistedFeeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/DefiForYouNFTFactory.sol:27"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionsByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)4999)dyn_storage)",
            "src": "contracts/DefiForYouNFTFactory.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)4999)dyn_storage)": {
            "label": "mapping(address => contract DefiForYouNFT[])"
          },
          "t_array(t_contract(DefiForYouNFT)4999)dyn_storage": {
            "label": "contract DefiForYouNFT[]"
          },
          "t_contract(DefiForYouNFT)4999": {
            "label": "contract DefiForYouNFT"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c2927a77a6bc3c93bcd5a92f7f2af026b07197f17ff2402c7d39323b34bece16": {
      "address": "0x67c08e2379EFCB63EAe0E70091e09f502967D675",
      "txHash": "0x9948ab3e4130e17251e73e67c2e936b413c1a68af1cc6429aa8eff28707622f2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/DefiForYouNFTFactory.sol:25"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionCreatingFee",
            "type": "t_uint256",
            "src": "contracts/DefiForYouNFTFactory.sol:26"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "whitelistedFeeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/DefiForYouNFTFactory.sol:27"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionsByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)4999)dyn_storage)",
            "src": "contracts/DefiForYouNFTFactory.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)4999)dyn_storage)": {
            "label": "mapping(address => contract DefiForYouNFT[])"
          },
          "t_array(t_contract(DefiForYouNFT)4999)dyn_storage": {
            "label": "contract DefiForYouNFT[]"
          },
          "t_contract(DefiForYouNFT)4999": {
            "label": "contract DefiForYouNFT"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d7e0f491a6223967a9d6c8a9deafa509176792486b7fd0823dfc516dc60b2487": {
      "address": "0x445BF36D39Ca50592aeaF174f5c1e64dAF320062",
      "txHash": "0x9cff8efaf60e8d85b7ea2ed0958f0b1d82a1422886b451b596b17ce567b82f08",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts\\DefiForYouNFTFactory.sol:25"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionCreatingFee",
            "type": "t_uint256",
            "src": "contracts\\DefiForYouNFTFactory.sol:26"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "whitelistedFeeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\DefiForYouNFTFactory.sol:27"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionsByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)6469)dyn_storage)",
            "src": "contracts\\DefiForYouNFTFactory.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)6469)dyn_storage)": {
            "label": "mapping(address => contract DefiForYouNFT[])"
          },
          "t_array(t_contract(DefiForYouNFT)6469)dyn_storage": {
            "label": "contract DefiForYouNFT[]"
          },
          "t_contract(DefiForYouNFT)6469": {
            "label": "contract DefiForYouNFT"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9bf8176f8d53538cee0c240d27266e7fc3f040da9eb34922c3f955d5a938d99f": {
      "address": "0xa8D26fE1a4a971BC06e2C25817dA9620631Bfb96",
      "txHash": "0x0bf207a313509e89d1a1b946a37b01abf07890c7055053d64cb30e238203c228",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "SellNFT",
            "label": "marketFee",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:31"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeWallet",
            "type": "t_address",
            "src": "contracts/SellNFT.sol:32"
          },
          {
            "contract": "SellNFT",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:33"
          },
          {
            "contract": "SellNFT",
            "label": "_orderIdCounter",
            "type": "t_struct(Counter)1682_storage",
            "src": "contracts/SellNFT.sol:35"
          },
          {
            "contract": "SellNFT",
            "label": "orders",
            "type": "t_mapping(t_uint256,t_struct(Order)5434_storage)",
            "src": "contracts/SellNFT.sol:36"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1682_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5434_storage)": {
            "label": "mapping(uint256 => struct SellNFT.Order)"
          },
          "t_struct(Order)5434_storage": {
            "label": "struct SellNFT.Order",
            "members": [
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "numberOfCopies",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "22f9c3c8da318ec029a7249644a186e2b1df1a7e0bca82385295a0adfb153411": {
      "address": "0x7a578F4dC919FEB750ee77113C0513D9eE50a680",
      "txHash": "0x2b1ee0b8c92a2953544b71f93efe7ce0df49cff3a784f977e90810ccef47490c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "SellNFT",
            "label": "marketFee",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:31"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeWallet",
            "type": "t_address",
            "src": "contracts/SellNFT.sol:32"
          },
          {
            "contract": "SellNFT",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:33"
          },
          {
            "contract": "SellNFT",
            "label": "_orderIdCounter",
            "type": "t_struct(Counter)1682_storage",
            "src": "contracts/SellNFT.sol:35"
          },
          {
            "contract": "SellNFT",
            "label": "orders",
            "type": "t_mapping(t_uint256,t_struct(Order)5434_storage)",
            "src": "contracts/SellNFT.sol:36"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1682_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5434_storage)": {
            "label": "mapping(uint256 => struct SellNFT.Order)"
          },
          "t_struct(Order)5434_storage": {
            "label": "struct SellNFT.Order",
            "members": [
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "numberOfCopies",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e4d44528021d51850e81c1d75e04cde813c920072f7d6a56522a806d2a6d75d8": {
      "address": "0x1a598438372B5a864777840Dc94128C3F1551F12",
      "txHash": "0xd568a0bbf38d4b5e9cf995d78009398695f74fa809d13f1ac0aa5ee2d454df98",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "SellNFT",
            "label": "marketFee",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:31"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeWallet",
            "type": "t_address",
            "src": "contracts/SellNFT.sol:32"
          },
          {
            "contract": "SellNFT",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:33"
          },
          {
            "contract": "SellNFT",
            "label": "_orderIdCounter",
            "type": "t_struct(Counter)1740_storage",
            "src": "contracts/SellNFT.sol:35"
          },
          {
            "contract": "SellNFT",
            "label": "orders",
            "type": "t_mapping(t_uint256,t_struct(Order)5752_storage)",
            "src": "contracts/SellNFT.sol:36"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1740_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5752_storage)": {
            "label": "mapping(uint256 => struct SellNFT.Order)"
          },
          "t_struct(Order)5752_storage": {
            "label": "struct SellNFT.Order",
            "members": [
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "numberOfCopies",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "018995e4b49e957c5ef5d244323f4d4eb90cc110a381541140f3ddfa51d8791d": {
      "address": "0x046206B5Bf14ad918EeB2FE94F811CB527D4E2c6",
      "txHash": "0x8fe4b34d2ba633b7d51bf973c24ee405085d1b6773893cee5eaead36dba0f6f5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeRate",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:30"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeWallet",
            "type": "t_address",
            "src": "contracts/SellNFT.sol:31"
          },
          {
            "contract": "SellNFT",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:32"
          },
          {
            "contract": "SellNFT",
            "label": "_orderIdCounter",
            "type": "t_struct(Counter)1682_storage",
            "src": "contracts/SellNFT.sol:34"
          },
          {
            "contract": "SellNFT",
            "label": "orders",
            "type": "t_mapping(t_uint256,t_struct(Order)6574_storage)",
            "src": "contracts/SellNFT.sol:35"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1682_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)6574_storage)": {
            "label": "mapping(uint256 => struct SellNFT.Order)"
          },
          "t_struct(Order)6574_storage": {
            "label": "struct SellNFT.Order",
            "members": [
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "numberOfCopies",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)6577"
              }
            ]
          },
          "t_enum(OrderStatus)6577": {
            "label": "enum SellNFT.OrderStatus",
            "members": [
              "ON_SALES",
              "COMPLETED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d13794399f2afb9be40852bb5268265b66256584ad36d2ae4169fd08cc22b2d2": {
      "address": "0x9413aDD110D47ECAdcC2Ec00DF6D14F6Ca6d1931",
      "txHash": "0xe29846daccfd68ec2c8006f404448367b3b0ccc7f643abc62eefd34255a4b7e4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeRate",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:30"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeWallet",
            "type": "t_address",
            "src": "contracts/SellNFT.sol:31"
          },
          {
            "contract": "SellNFT",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:32"
          },
          {
            "contract": "SellNFT",
            "label": "_orderIdCounter",
            "type": "t_struct(Counter)1740_storage",
            "src": "contracts/SellNFT.sol:34"
          },
          {
            "contract": "SellNFT",
            "label": "orders",
            "type": "t_mapping(t_uint256,t_struct(Order)6892_storage)",
            "src": "contracts/SellNFT.sol:35"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1740_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)6892_storage)": {
            "label": "mapping(uint256 => struct SellNFT.Order)"
          },
          "t_struct(Order)6892_storage": {
            "label": "struct SellNFT.Order",
            "members": [
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "numberOfCopies",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)6895"
              }
            ]
          },
          "t_enum(OrderStatus)6895": {
            "label": "enum SellNFT.OrderStatus",
            "members": [
              "ON_SALES",
              "COMPLETED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "29ac9d7131f13403a0e3ffe1c4c233ce81de01d2bcf6d69eaa9d81d026d36adb": {
      "address": "0x1F1c0421a7Cfbc4A1C966DE5c29234294a904d22",
      "txHash": "0xb9731a5ea6c61c8619934fe1fd04fc70a77632318ac5fbf155a9a58e6186d917",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeRate",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:30"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeWallet",
            "type": "t_address",
            "src": "contracts/SellNFT.sol:31"
          },
          {
            "contract": "SellNFT",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:32"
          },
          {
            "contract": "SellNFT",
            "label": "_orderIdCounter",
            "type": "t_struct(Counter)1740_storage",
            "src": "contracts/SellNFT.sol:34"
          },
          {
            "contract": "SellNFT",
            "label": "orders",
            "type": "t_mapping(t_uint256,t_struct(Order)6892_storage)",
            "src": "contracts/SellNFT.sol:35"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1740_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)6892_storage)": {
            "label": "mapping(uint256 => struct SellNFT.Order)"
          },
          "t_struct(Order)6892_storage": {
            "label": "struct SellNFT.Order",
            "members": [
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "numberOfCopies",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)6895"
              }
            ]
          },
          "t_enum(OrderStatus)6895": {
            "label": "enum SellNFT.OrderStatus",
            "members": [
              "ON_SALES",
              "COMPLETED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
