{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x31d7c829D3beE1fA3616041cDB1f8349c1723253",
      "txHash": "0xea87536b634b6edb5e19588a55fcceea3f851081324cd2d9c611737d81bbed35",
      "kind": "uups"
    },
    {
      "address": "0xD6623AF04Eb5ca1977a39C52acC384adb9EcD7dA",
      "txHash": "0x8a883b38c73efe95e26c8639cdc0a390bcaff1cf5297f83b5338fd8bbf83081d",
      "kind": "uups"
    },
    {
      "address": "0xfBa7bFDbFA769cD1C9CF977Dada1131F36F362A1",
      "txHash": "0xfa3fd49304f17a0f28427e286d6e2647c36f5ed30b357d07c15f07b0f8e8e06f",
      "kind": "uups"
    },
    {
      "address": "0x737Ea5C8bBfc958f6b1BaE95F7B63Fa247c57a50",
      "txHash": "0xa2a1d64358fb35bccd90bb93242f51c669d5dd67d68af3d549f4f4a9bc506b14",
      "kind": "uups"
    },
    {
      "address": "0x5fE24E0eA1bEFdbdeb12A64b920a559F5B6d19EE",
      "txHash": "0x4bcca0fba638b21d23fddd1da0a75fe9c2ec5f35f84d2b89d3c9f91bb9960097",
      "kind": "uups"
    },
    {
      "address": "0xFb8586E8BF73810294c15C6Ab6DD5E36dcC34F6D",
      "txHash": "0xa2bed16b27d4e820060af783627b56214843eb79e970bdffff9799f568fd8760",
      "kind": "uups"
    },
    {
      "address": "0x23FEdC388a7c61BB8d277486d3E9a8fC88c6c5F9",
      "txHash": "0xdd3c3ea9dd12e418b74071e4ef9f45f7a527ced8d27829b6aa8883011c851b6b",
      "kind": "uups"
    },
    {
      "address": "0x905ECD76dD7f3D3F7D784AE6E828817532adeBaC",
      "txHash": "0x5f6fdd54166c6d940c6617a6fbe420411ebff62fa23493cda7f5b7978532ead2",
      "kind": "uups"
    },
    {
      "address": "0xf45F328f5d4b780180D62DC6290e5f8f91c4C9cE",
      "txHash": "0x2d019b56ee68d99257fa7f63d17fcde2c62aab6a7dc4ffdaaef23ab4141ec7fd",
      "kind": "uups"
    },
    {
      "address": "0xe34Dd33C05125c5DBDea31A1DF96738b8c03Ca03",
      "txHash": "0x1fa9a783c49570d9bf38e73b5a8461cc895e9c87bc88f2ff657bcb6d7542e95c",
      "kind": "uups"
    },
    {
      "address": "0xf656d49A16AE778c8A0D1271f66ba6f475790bb5",
      "txHash": "0x0b4441474feabb3d8b894b83f478b059489b21c29c1a8f6897fdd8fbcaf42756",
      "kind": "uups"
    },
    {
      "address": "0x46dF77abf626C28714bB096829Ee886f6473afb8",
      "txHash": "0x58bb47908aa0a4a4b003057ec199fe43eb72d7977ff5084874d4c9b0a72f6484",
      "kind": "uups"
    },
    {
      "address": "0x4DDc1Fb968D0a5E4A172A75aB195edb5e041Feb4",
      "txHash": "0xbcfd740f20c1782f517d76bd08aa15ae4774570834f0fb69b3b963f313f5c57b",
      "kind": "uups"
    },
    {
      "address": "0x38aa98F591CAc349F6Be8bB9bc8A3762D367E4FF",
      "txHash": "0xfd0cc9257f4a141ecb844d23dd28e6a05a43499e40dabd88c5b3af721e2ecc93",
      "kind": "uups"
    },
    {
      "address": "0xAEaC115355E0bE955F301645f388d1571FF32908",
      "txHash": "0x66de3adc326af0aca65eed0b42b4714af111b1dbef4c8445e7f274de61c34e72",
      "kind": "uups"
    },
    {
      "address": "0x8D3F2Cf5CbFeB1C5c6B92032F4fdE5e4d92E04dd",
      "txHash": "0x257340f57ea156266604fa283cafea0f43b4207ae258c5b7240e80336c8c6d3b",
      "kind": "uups"
    },
    {
      "address": "0x4F9cA14A576F903E8743787034c5693a11DCB1c1",
      "txHash": "0x27269f3a1e273a4c6d293f315cf2207ed2961fc9b29cea47c58a779bc0bc64e2",
      "kind": "uups"
    },
    {
      "address": "0xb2eBd85F60f33d83A4EDC827635Ea3923A7828DE",
      "txHash": "0x7441219c2ffcbbbee27c66d4c94c15740db9843f91c9bbf0d3b67dc3f52253dd",
      "kind": "uups"
    },
    {
      "address": "0xd7aa97742A8A50d9BE970aF7D3e9Aa61C0F211d5",
      "txHash": "0x080eb7bd8aa264de34b8f3669cd961ee56bb473079be4e046b788af70d9d118c",
      "kind": "uups"
    },
    {
      "address": "0x7CC26288c76DB907869A0EEBA255176400108693",
      "txHash": "0x829636c972968f86f5c3528b5501853411a75c9f8823bfcb7eeac77458d6b7fd",
      "kind": "uups"
    },
    {
      "address": "0x31D666e0F5840e037A004130Ddf761410545e9fD",
      "txHash": "0x2416ded265efa4eadc5140e9e3bb6f2fe120e46ef7536a5bed1ac23d8aa1ead4",
      "kind": "uups"
    },
    {
      "address": "0xd3A52d8A4eEE21f755E82d1C1a8d8426f2F1aD9E",
      "txHash": "0x2b241ad8291a3c358722ab6ffedee36bd1e08d41cb8ead2e64cae211e160520b",
      "kind": "uups"
    },
    {
      "address": "0xbA74c58ad2e875AF8daa23313d0D7360af70EB2d",
      "txHash": "0x58c8ad495adf9b3c9fbe753c865b41c85bf09c26f2934293c953cb9f8e9d91ae",
      "kind": "uups"
    },
    {
      "address": "0x973a543EEa8D54Cb3E3C17fB15b1eB6e7534FEB6",
      "txHash": "0x3e1fea6808ea5e93c078aa4c6c0fa874c8a90b64abf17b769d8180dd169c5f45",
      "kind": "uups"
    },
    {
      "address": "0x9ccE3E6249BF3D36DA6AB684B9339D9C1893738a",
      "txHash": "0x5d2c59c492e78a34b29d616f136069964e79189656b8156eef729b1292402236",
      "kind": "uups"
    },
    {
      "address": "0x91E031AD210901f54B75a565b4384BD4D0A7A6b3",
      "txHash": "0x6e91c8811a6131806ccd42b6e4f43e3d0a7fde04e2923335db223fbc4ba0fafe",
      "kind": "uups"
    },
    {
      "address": "0xB86988247c7679857783927d00de3c32AD82d6Eb",
      "txHash": "0x56f0db83b8ec71ecb8377ed1407454636faa6abc1329941355f43c8c477b86ee",
      "kind": "uups"
    },
    {
      "address": "0xb219A3c8690eFbF9816B589a956A7473C2372c84",
      "txHash": "0x14cda39fab50f961a709dca4c10551b59c31a5bef780062de1f85ef18c4a3b32",
      "kind": "uups"
    },
    {
      "address": "0x441bFDC81Bc1575470c2D5148f7d5d27aB92C445",
      "txHash": "0xd66e028e2ab16f3830c10e24ecfcf8a34f67c511266e3520ad3290cf82266fda",
      "kind": "uups"
    },
    {
      "address": "0xD2be17aE8E5171A2090162044B8C8380325bbCDA",
      "txHash": "0x60f7c0dd307bd0564de2b97178503bf6e9238a35d1bb244b5efc46232c34acc9",
      "kind": "uups"
    },
    {
      "address": "0xaf65c3C7e7E8887c0d3810177EfBFC54772E113D",
      "txHash": "0xe64b7441d726b79d1bf79bf044eab0f3db42deca858a73d0770f673b3bbfb386",
      "kind": "uups"
    },
    {
      "address": "0xF6bc4A53DA5FFa0eede4923cbf43B7bB253Eb251",
      "txHash": "0x5d707e7d262e442a3feebfda882d58d7ec48a62762848dd28145283a9615f01d",
      "kind": "uups"
    },
    {
      "address": "0x288Eb23EB8A9C52789ad50dC53875Cd5614Bac63",
      "txHash": "0x04568c55f220e05757d48e1577131ab3acb081ae95281d68b1a3b2b7a762f162",
      "kind": "uups"
    },
    {
      "address": "0x893c6e4A5F681FB4F61C5A3Ee24e735980277201",
      "txHash": "0xdf03a3e70996d65c790fd8e7af99652274268d313b598f7c887ad6af01c4033a",
      "kind": "uups"
    },
    {
      "address": "0xCEe31B443B9209B37A914E8a20CCDAD77ca8B965",
      "txHash": "0xe6e5940078b87e358151b7ce76cdf8eec5c8002837247bc9f4b955fa5c1cbd6e",
      "kind": "uups"
    },
    {
      "address": "0xCc0ddaB6e4f21956355e840Fe1E98C659b2818Aa",
      "txHash": "0xb641b22f95d2e50a3ed2cc4500a92816c3e56f5e89044999a737071843bd7401",
      "kind": "uups"
    },
    {
      "address": "0xc20A5de164F2AB8D7A921967B9a64CAffdA9015B",
      "txHash": "0x37240c120f1b307731e11d73ff2c94f63b730fd4b1d7590bde96b0b862fcfcc8",
      "kind": "uups"
    },
    {
      "address": "0xb1ef4abD5f8fA4EBd73E26E0c80c566F4c1d5406",
      "txHash": "0x60e12de3030e6a0669c54091defa0e102f45f39b3a1d0ada85af84acc1f21c8a",
      "kind": "uups"
    },
    {
      "address": "0x124e82D0b8530C8Af70b5c689F3D2B1121B0e62f",
      "txHash": "0x0104c853b505cb7cb46dd1a199fad64c03caf5e800e3e7f08fd3f94e3969f3a9",
      "kind": "uups"
    },
    {
      "address": "0x98f8a0B673738DC67E1C14716092ed1ED02C064D",
      "txHash": "0x8861ca52fe2e778c99965941787225668cdd911cdd2aa27a002d943fe2555125",
      "kind": "uups"
    },
    {
      "address": "0x6644A4EF70a212fcE485653205eF3BB6F7cFd182",
      "txHash": "0xf350bf28beb4e7c1aa222651a8fe82ad77004f468d18b127a7f7bffe95f8f54c",
      "kind": "uups"
    },
    {
      "address": "0x7732230C6cC4F1A7dcbB8775C75261402619749E",
      "txHash": "0x968080c944b3ee943f57324430071956f968c367714f6a2b20c533f51a3db049",
      "kind": "uups"
    },
    {
      "address": "0x81620303A2015eCDFD132577c8987bD3cb6b0c9F",
      "txHash": "0x74a6c2f7c8f343ae16ee88fc02fd05b192bd0e0d7fb2888a5e54fb1464833ec2",
      "kind": "uups"
    },
    {
      "address": "0xe81598217Ef34B190d5f1d1772ddC1e935a0F77E",
      "txHash": "0x042d7e6071992cb67931703cec0297ba7de3b2bf63631dafabcd269a81c50846",
      "kind": "uups"
    },
    {
      "address": "0xF4EA74c9Cd8aC46E875ab964b0cA24FeD25568d7",
      "txHash": "0xb9a9e9cb54ea67caf03482df19aef2d4b0ca71294b123c2f70dc2b1dc2a01c87",
      "kind": "uups"
    },
    {
      "address": "0x053448fbbfAbD28813e97dAc72F93E14D27207f7",
      "txHash": "0x49200d4af0166e48b75609d025d4bd1861f73fd313d04bcd57dbf32ff36540a5",
      "kind": "uups"
    },
    {
      "address": "0xBD9dEeD1906abF0B59Ed6b0bd46bab173946593E",
      "txHash": "0x94edc6600378ba601295c17001c3b055c068f0814e97e1fc219cbd083a7dd5fa",
      "kind": "uups"
    },
    {
      "address": "0x3fd6b7084c876758c8E605B93f2060290A67347c",
      "txHash": "0xf635926d5643f49fab301c1fb111b4594e894b04881c4691c9d823b359bb020b",
      "kind": "uups"
    },
    {
      "address": "0xB44aB03958AC9508bb5cf23b3b4076d2E4eb083a",
      "txHash": "0xf141098dce7868ff21afc0656894bed45c17494589bed7ffffe2514eb0e0a0b7",
      "kind": "uups"
    },
    {
      "address": "0xce3D2731D87C752B3CB3f110836e24D92Ba5d877",
      "txHash": "0xf1383c9d20f0dae4adb94f0809a061fd1f56cbaec0438cb8db24e3691f240a94",
      "kind": "uups"
    },
    {
      "address": "0x30aeeb2eb69AD78805772EC0d94a72Da089631f4",
      "txHash": "0xe2888d96fcbe2ed8c168624fb189c0fa5d17e963ca940c88a67e92b3ea2189fb",
      "kind": "uups"
    },
    {
      "address": "0x1f8De9037013fC2183171298c412d84244568e7c",
      "txHash": "0xa2e9dfdb1c64be5c04341e23f16e6fdbf887dfb8f4c11b9550f643420b2a5a2b",
      "kind": "uups"
    },
    {
      "address": "0x75044b7692531aAe045325666199F17FCC2a79dc",
      "txHash": "0x2fc78444a4da788dc03b129239f99cef64af5a471429667de266adb2067bd3a0",
      "kind": "uups"
    },
    {
      "address": "0xDaa16a09228914BE6CF7E7dC5A5b605fbDF85A1d",
      "txHash": "0x2bbd0d636e2e9a0ac1bb1a50f6119866d7514899bd4d45949133cae872faec59",
      "kind": "uups"
    },
    {
      "address": "0xeE78B9bb33e2510298fd76Cf04a65d25E07761D4",
      "txHash": "0xfbf44a1ab112d3d1811ad511af537da61ab5d22d7387fa9ee6e28fcc6fd06976",
      "kind": "uups"
    },
    {
      "address": "0x78574F34908db4bb35914Fd77D271D2c7c8250dF",
      "txHash": "0xefba7140bc796b8d7d88d5fe3a6a416728e08102df1303e9a4ff71f962c0bf0f",
      "kind": "uups"
    }
  ],
  "impls": {
    "a290998c55758506a7e9e6b257afd134086414e6d945b2a9fa801d4aa8f83484": {
      "address": "0x1C50d6FCEab16f36dCcf22153a6083E817da864a",
      "txHash": "0xe180d65de1edd5d5126b2b1e1a9b76fbfb04d6ac8f40e302f731df2fdda0021b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionsByOwner",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_contract(DefiForYouNFT)4888))",
            "src": "contracts/DefiForYouNFTFactory.sol:24"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "numberOfCollectionByOwner",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DefiForYouNFTFactory.sol:26"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_contract(DefiForYouNFT)4888))": {
            "label": "mapping(address => mapping(uint256 => contract DefiForYouNFT))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_contract(DefiForYouNFT)4888)": {
            "label": "mapping(uint256 => contract DefiForYouNFT)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(DefiForYouNFT)4888": {
            "label": "contract DefiForYouNFT"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "601ad4e1ecf3eba08310e872faf3f3caee9bdb00657d47821d5ebe9bb280f325": {
      "address": "0x10f80448493F8Cc7E4631e1ddDBB27D691aD4789",
      "txHash": "0xa784b961bd78eb305fc0ef69fe7867e260105f91029d5052cb4ed1a76118e898",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionsByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)5477)dyn_storage)",
            "src": "contracts\\DefiForYouNFTFactory.sol:24"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "whitelistedFeeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\DefiForYouNFTFactory.sol:25"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionCreatingFee",
            "type": "t_uint256",
            "src": "contracts\\DefiForYouNFTFactory.sol:27"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts\\DefiForYouNFTFactory.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)5477)dyn_storage)": {
            "label": "mapping(address => contract DefiForYouNFT[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_contract(DefiForYouNFT)5477)dyn_storage": {
            "label": "contract DefiForYouNFT[]"
          },
          "t_contract(DefiForYouNFT)5477": {
            "label": "contract DefiForYouNFT"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a210c8b085589b05e086c92350b8e6b2b2965180d3c593012f7f977598f440b3": {
      "address": "0xf43523eD98401018f230AcdD7bd2162D4d67e456",
      "txHash": "0x00a0b47db4a9e56866f266f81e863f709874a1c4e0291f3d0683b3d07fe76aed",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionsByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)5048)dyn_storage)",
            "src": "contracts/DefiForYouNFTFactory.sol:24"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "whitelistedFeeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/DefiForYouNFTFactory.sol:25"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionCreatingFee",
            "type": "t_uint256",
            "src": "contracts/DefiForYouNFTFactory.sol:27"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/DefiForYouNFTFactory.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)5048)dyn_storage)": {
            "label": "mapping(address => contract DefiForYouNFT[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_contract(DefiForYouNFT)6518)dyn_storage": {
            "label": "contract DefiForYouNFT[]"
          },
          "t_contract(DefiForYouNFT)6518": {
            "label": "contract DefiForYouNFT"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c51b36068b891c77ba23ecef2ecd1ed38b5a165368095272ff35cf2ccab3cf56": {
      "address": "0x45ef7DF638Cb3fBE2d8B4710A1243AC9AE629214",
      "txHash": "0x26826065cf18e5059ab2d63b75e72bb4600141f1eb16560fa3d4c5ef5f2b83b3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionsByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)6518)dyn_storage)",
            "src": "contracts\\DefiForYouNFTFactory.sol:24"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "whitelistedFeeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\DefiForYouNFTFactory.sol:25"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionCreatingFee",
            "type": "t_uint256",
            "src": "contracts\\DefiForYouNFTFactory.sol:27"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts\\DefiForYouNFTFactory.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)6518)dyn_storage)": {
            "label": "mapping(address => contract DefiForYouNFT[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_contract(DefiForYouNFT)6518)dyn_storage": {
            "label": "contract DefiForYouNFT[]"
          },
          "t_contract(DefiForYouNFT)6518": {
            "label": "contract DefiForYouNFT"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "decb1bbcab709ed7480fc3ef00797456cd8848e804d82e6e3b8af57d71178309": {
      "address": "0x9722eE96Fd1b5f9C7949599A8033D77063257BAB",
      "txHash": "0x9ef4f8ed6e72874f50904c3a92305e1fc134c528afdc5c603bb818adc5abd23a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/DefiForYouNFTFactory.sol:25"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionCreatingFee",
            "type": "t_uint256",
            "src": "contracts/DefiForYouNFTFactory.sol:26"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "whitelistedFeeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/DefiForYouNFTFactory.sol:27"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionsByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)4999)dyn_storage)",
            "src": "contracts/DefiForYouNFTFactory.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)4999)dyn_storage)": {
            "label": "mapping(address => contract DefiForYouNFT[])"
          },
          "t_array(t_contract(DefiForYouNFT)4999)dyn_storage": {
            "label": "contract DefiForYouNFT[]"
          },
          "t_contract(DefiForYouNFT)4999": {
            "label": "contract DefiForYouNFT"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c2927a77a6bc3c93bcd5a92f7f2af026b07197f17ff2402c7d39323b34bece16": {
      "address": "0x67c08e2379EFCB63EAe0E70091e09f502967D675",
      "txHash": "0x9948ab3e4130e17251e73e67c2e936b413c1a68af1cc6429aa8eff28707622f2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/DefiForYouNFTFactory.sol:25"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionCreatingFee",
            "type": "t_uint256",
            "src": "contracts/DefiForYouNFTFactory.sol:26"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "whitelistedFeeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/DefiForYouNFTFactory.sol:27"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionsByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)8300)dyn_storage)",
            "src": "contracts/DefiForYouNFTFactory.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)8300)dyn_storage)": {
            "label": "mapping(address => contract DefiForYouNFT[])"
          },
          "t_array(t_contract(DefiForYouNFT)8300)dyn_storage": {
            "label": "contract DefiForYouNFT[]"
          },
          "t_contract(DefiForYouNFT)8300": {
            "label": "contract DefiForYouNFT"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d7e0f491a6223967a9d6c8a9deafa509176792486b7fd0823dfc516dc60b2487": {
      "address": "0x445BF36D39Ca50592aeaF174f5c1e64dAF320062",
      "txHash": "0x9cff8efaf60e8d85b7ea2ed0958f0b1d82a1422886b451b596b17ce567b82f08",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts\\DefiForYouNFTFactory.sol:25"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionCreatingFee",
            "type": "t_uint256",
            "src": "contracts\\DefiForYouNFTFactory.sol:26"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "whitelistedFeeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\DefiForYouNFTFactory.sol:27"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionsByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)6469)dyn_storage)",
            "src": "contracts\\DefiForYouNFTFactory.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)6469)dyn_storage)": {
            "label": "mapping(address => contract DefiForYouNFT[])"
          },
          "t_array(t_contract(DefiForYouNFT)6469)dyn_storage": {
            "label": "contract DefiForYouNFT[]"
          },
          "t_contract(DefiForYouNFT)6469": {
            "label": "contract DefiForYouNFT"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9bf8176f8d53538cee0c240d27266e7fc3f040da9eb34922c3f955d5a938d99f": {
      "address": "0xa8D26fE1a4a971BC06e2C25817dA9620631Bfb96",
      "txHash": "0x0bf207a313509e89d1a1b946a37b01abf07890c7055053d64cb30e238203c228",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "SellNFT",
            "label": "marketFee",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:31"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeWallet",
            "type": "t_address",
            "src": "contracts/SellNFT.sol:32"
          },
          {
            "contract": "SellNFT",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:33"
          },
          {
            "contract": "SellNFT",
            "label": "_orderIdCounter",
            "type": "t_struct(Counter)1682_storage",
            "src": "contracts/SellNFT.sol:35"
          },
          {
            "contract": "SellNFT",
            "label": "orders",
            "type": "t_mapping(t_uint256,t_struct(Order)5434_storage)",
            "src": "contracts/SellNFT.sol:36"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1682_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5434_storage)": {
            "label": "mapping(uint256 => struct SellNFT.Order)"
          },
          "t_struct(Order)5434_storage": {
            "label": "struct SellNFT.Order",
            "members": [
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "numberOfCopies",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "22f9c3c8da318ec029a7249644a186e2b1df1a7e0bca82385295a0adfb153411": {
      "address": "0x7a578F4dC919FEB750ee77113C0513D9eE50a680",
      "txHash": "0x2b1ee0b8c92a2953544b71f93efe7ce0df49cff3a784f977e90810ccef47490c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "SellNFT",
            "label": "marketFee",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:31"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeWallet",
            "type": "t_address",
            "src": "contracts/SellNFT.sol:32"
          },
          {
            "contract": "SellNFT",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:33"
          },
          {
            "contract": "SellNFT",
            "label": "_orderIdCounter",
            "type": "t_struct(Counter)1682_storage",
            "src": "contracts/SellNFT.sol:35"
          },
          {
            "contract": "SellNFT",
            "label": "orders",
            "type": "t_mapping(t_uint256,t_struct(Order)5434_storage)",
            "src": "contracts/SellNFT.sol:36"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1682_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5434_storage)": {
            "label": "mapping(uint256 => struct SellNFT.Order)"
          },
          "t_struct(Order)5434_storage": {
            "label": "struct SellNFT.Order",
            "members": [
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "numberOfCopies",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e4d44528021d51850e81c1d75e04cde813c920072f7d6a56522a806d2a6d75d8": {
      "address": "0x1a598438372B5a864777840Dc94128C3F1551F12",
      "txHash": "0xd568a0bbf38d4b5e9cf995d78009398695f74fa809d13f1ac0aa5ee2d454df98",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "SellNFT",
            "label": "marketFee",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:31"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeWallet",
            "type": "t_address",
            "src": "contracts/SellNFT.sol:32"
          },
          {
            "contract": "SellNFT",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:33"
          },
          {
            "contract": "SellNFT",
            "label": "_orderIdCounter",
            "type": "t_struct(Counter)1740_storage",
            "src": "contracts/SellNFT.sol:35"
          },
          {
            "contract": "SellNFT",
            "label": "orders",
            "type": "t_mapping(t_uint256,t_struct(Order)5752_storage)",
            "src": "contracts/SellNFT.sol:36"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1740_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5752_storage)": {
            "label": "mapping(uint256 => struct SellNFT.Order)"
          },
          "t_struct(Order)5752_storage": {
            "label": "struct SellNFT.Order",
            "members": [
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "numberOfCopies",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "018995e4b49e957c5ef5d244323f4d4eb90cc110a381541140f3ddfa51d8791d": {
      "address": "0x046206B5Bf14ad918EeB2FE94F811CB527D4E2c6",
      "txHash": "0x8fe4b34d2ba633b7d51bf973c24ee405085d1b6773893cee5eaead36dba0f6f5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeRate",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:30"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeWallet",
            "type": "t_address",
            "src": "contracts/SellNFT.sol:31"
          },
          {
            "contract": "SellNFT",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:32"
          },
          {
            "contract": "SellNFT",
            "label": "_orderIdCounter",
            "type": "t_struct(Counter)1682_storage",
            "src": "contracts/SellNFT.sol:34"
          },
          {
            "contract": "SellNFT",
            "label": "orders",
            "type": "t_mapping(t_uint256,t_struct(Order)6574_storage)",
            "src": "contracts/SellNFT.sol:35"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1682_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)6574_storage)": {
            "label": "mapping(uint256 => struct SellNFT.Order)"
          },
          "t_struct(Order)6574_storage": {
            "label": "struct SellNFT.Order",
            "members": [
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "numberOfCopies",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)6577"
              }
            ]
          },
          "t_enum(OrderStatus)6577": {
            "label": "enum SellNFT.OrderStatus",
            "members": [
              "ON_SALES",
              "COMPLETED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d13794399f2afb9be40852bb5268265b66256584ad36d2ae4169fd08cc22b2d2": {
      "address": "0x9413aDD110D47ECAdcC2Ec00DF6D14F6Ca6d1931",
      "txHash": "0xe29846daccfd68ec2c8006f404448367b3b0ccc7f643abc62eefd34255a4b7e4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeRate",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:30"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeWallet",
            "type": "t_address",
            "src": "contracts/SellNFT.sol:31"
          },
          {
            "contract": "SellNFT",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:32"
          },
          {
            "contract": "SellNFT",
            "label": "_orderIdCounter",
            "type": "t_struct(Counter)1740_storage",
            "src": "contracts/SellNFT.sol:34"
          },
          {
            "contract": "SellNFT",
            "label": "orders",
            "type": "t_mapping(t_uint256,t_struct(Order)6892_storage)",
            "src": "contracts/SellNFT.sol:35"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1740_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)6892_storage)": {
            "label": "mapping(uint256 => struct SellNFT.Order)"
          },
          "t_struct(Order)6892_storage": {
            "label": "struct SellNFT.Order",
            "members": [
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "numberOfCopies",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)6895"
              }
            ]
          },
          "t_enum(OrderStatus)6895": {
            "label": "enum SellNFT.OrderStatus",
            "members": [
              "ON_SALES",
              "COMPLETED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "29ac9d7131f13403a0e3ffe1c4c233ce81de01d2bcf6d69eaa9d81d026d36adb": {
      "address": "0x1F1c0421a7Cfbc4A1C966DE5c29234294a904d22",
      "txHash": "0xb9731a5ea6c61c8619934fe1fd04fc70a77632318ac5fbf155a9a58e6186d917",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeRate",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:30"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeWallet",
            "type": "t_address",
            "src": "contracts/SellNFT.sol:31"
          },
          {
            "contract": "SellNFT",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:32"
          },
          {
            "contract": "SellNFT",
            "label": "_orderIdCounter",
            "type": "t_struct(Counter)1740_storage",
            "src": "contracts/SellNFT.sol:34"
          },
          {
            "contract": "SellNFT",
            "label": "orders",
            "type": "t_mapping(t_uint256,t_struct(Order)6892_storage)",
            "src": "contracts/SellNFT.sol:35"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1740_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)6892_storage)": {
            "label": "mapping(uint256 => struct SellNFT.Order)"
          },
          "t_struct(Order)6892_storage": {
            "label": "struct SellNFT.Order",
            "members": [
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "numberOfCopies",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)6895"
              }
            ]
          },
          "t_enum(OrderStatus)6895": {
            "label": "enum SellNFT.OrderStatus",
            "members": [
              "ON_SALES",
              "COMPLETED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "dc00403b2560143b04d528f148167d77493fc2726128eeb5b978ad22816a3dfc": {
      "address": "0x89dEE93d6Bec7f0Ca486cEe058ee1cD5A58819F4",
      "txHash": "0x4baa41c2312adf84ad1fd96952f762fecc269cb60b8af8dd164603ea4ad202ec",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeRate",
            "type": "t_uint256",
            "src": "contracts\\SellNFT.sol:30"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeWallet",
            "type": "t_address",
            "src": "contracts\\SellNFT.sol:31"
          },
          {
            "contract": "SellNFT",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts\\SellNFT.sol:32"
          },
          {
            "contract": "SellNFT",
            "label": "_orderIdCounter",
            "type": "t_struct(Counter)1740_storage",
            "src": "contracts\\SellNFT.sol:34"
          },
          {
            "contract": "SellNFT",
            "label": "orders",
            "type": "t_mapping(t_uint256,t_struct(Order)8680_storage)",
            "src": "contracts\\SellNFT.sol:35"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1740_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)8680_storage)": {
            "label": "mapping(uint256 => struct SellNFT.Order)"
          },
          "t_struct(Order)8680_storage": {
            "label": "struct SellNFT.Order",
            "members": [
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "numberOfCopies",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)8683"
              }
            ]
          },
          "t_enum(OrderStatus)8683": {
            "label": "enum SellNFT.OrderStatus",
            "members": [
              "ON_SALES",
              "COMPLETED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ca232437a5d789c2160122ed3d6cf8b564dba6832964665e4f4767a881d5e0d3": {
      "address": "0xcC71c08448153d4911B1A8820a33f8D4607c37dD",
      "txHash": "0x22945d79d4843db9913f7efb8e052b8700bff6599d80f4d7de8e4fc8f633750f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/hub/Hub.sol:25"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)8290_storage",
            "src": "contracts/hub/Hub.sol:27"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)8305_storage",
            "src": "contracts/hub/Hub.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(SystemConfig)8290_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)8305_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "85a3fd3c742adac475277926de62f2fc8849a915443c30007dcad9afadf73ef4": {
      "address": "0x00933054dc70eB88782C5abc2F5356A189fE621D",
      "txHash": "0x96939579b4814dc0d7e471386a2bb0d3a01d197817a5ca68693bfe262a2cd6ad",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeRate",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:34"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeWallet",
            "type": "t_address_payable",
            "src": "contracts/SellNFT.sol:35"
          },
          {
            "contract": "SellNFT",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:36"
          },
          {
            "contract": "SellNFT",
            "label": "_orderIdCounter",
            "type": "t_struct(Counter)1740_storage",
            "src": "contracts/SellNFT.sol:38"
          },
          {
            "contract": "SellNFT",
            "label": "orders",
            "type": "t_mapping(t_uint256,t_struct(Order)7098_storage)",
            "src": "contracts/SellNFT.sol:39"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_struct(Counter)1740_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)7098_storage)": {
            "label": "mapping(uint256 => struct SellNFT.Order)"
          },
          "t_struct(Order)7098_storage": {
            "label": "struct SellNFT.Order",
            "members": [
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "numberOfCopies",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)7101"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(OrderStatus)7101": {
            "label": "enum SellNFT.OrderStatus",
            "members": [
              "ON_SALES",
              "COMPLETED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2c75f9dc47a3e70e59a1cb45a34ec96e5440b9b4aeddc6f90012458e7f4f2fd4": {
      "address": "0xda04D912d56d8e945167446B407a885605da616e",
      "txHash": "0x0f235d944e22f72d3f52df55406f030ea3edbf25ec0bec4234abbcb58e1c0c2a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/hub/Hub.sol:26"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)12057_storage",
            "src": "contracts/hub/Hub.sol:28"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)12072_storage",
            "src": "contracts/hub/Hub.sol:29"
          },
          {
            "contract": "Hub",
            "label": "pawnNFTConfig",
            "type": "t_struct(PawnNFTConfig)12091_storage",
            "src": "contracts/hub/Hub.sol:30"
          },
          {
            "contract": "Hub",
            "label": "nftCollectionConfig",
            "type": "t_struct(NFTCollectionConfig)12096_storage",
            "src": "contracts/hub/Hub.sol:31"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(SystemConfig)12057_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)12072_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(PawnNFTConfig)12091_storage": {
            "label": "struct HubInterface.PawnNFTConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedEvaluationContract",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_struct(NFTCollectionConfig)12096_storage": {
            "label": "struct HubInterface.NFTCollectionConfig",
            "members": [
              {
                "label": "collectionCreatingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8eac4a82af7ad5f62c767218d70aebafd42d5829615c1b914767c00ab117b5d9": {
      "address": "0x2bD17a9977eDf8c986a00655b87F0a57EFaf5F74",
      "txHash": "0x02b6b78fd647f1147f2bdeea03390988c6818bb19ff0d680e09a12b735e7c10c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/DefiForYouNFTFactory.sol:25"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionCreatingFee",
            "type": "t_uint256",
            "src": "contracts/DefiForYouNFTFactory.sol:26"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "whitelistedFeeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/DefiForYouNFTFactory.sol:27"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionsByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)6039)dyn_storage)",
            "src": "contracts/DefiForYouNFTFactory.sol:29"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/DefiForYouNFTFactory.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)6039)dyn_storage)": {
            "label": "mapping(address => contract DefiForYouNFT[])"
          },
          "t_array(t_contract(DefiForYouNFT)6039)dyn_storage": {
            "label": "contract DefiForYouNFT[]"
          },
          "t_contract(DefiForYouNFT)6039": {
            "label": "contract DefiForYouNFT"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9b24457caaef181f07a4e1886aacdd9373f6bce0163a70b599d9f1fa7374c96d": {
      "address": "0x5A8dF68dEA4ab350EA71998122FC534b4945141a",
      "txHash": "0xab694bf81cf1fbcfd07d8fa224979c14af2e5bdf57364195e576c0365342b90f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeRate",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:32"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeWallet",
            "type": "t_address_payable",
            "src": "contracts/SellNFT.sol:33"
          },
          {
            "contract": "SellNFT",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:34"
          },
          {
            "contract": "SellNFT",
            "label": "_orderIdCounter",
            "type": "t_struct(Counter)1682_storage",
            "src": "contracts/SellNFT.sol:36"
          },
          {
            "contract": "SellNFT",
            "label": "orders",
            "type": "t_mapping(t_uint256,t_struct(Order)7524_storage)",
            "src": "contracts/SellNFT.sol:37"
          },
          {
            "contract": "SellNFT",
            "label": "tokenFromCollectionIsOnSales",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SellNFT.sol:39"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_struct(Counter)1682_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)7524_storage)": {
            "label": "mapping(uint256 => struct SellNFT.Order)"
          },
          "t_struct(Order)7524_storage": {
            "label": "struct SellNFT.Order",
            "members": [
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address_payable"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "numberOfCopies",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)7527"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(OrderStatus)7527": {
            "label": "enum SellNFT.OrderStatus",
            "members": [
              "ON_SALES",
              "COMPLETED"
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "234e589757a32e37012d37fe7b058abca5f32f82a568c591c6fc942c36b3187f": {
      "address": "0xade550Adf1FAF9ddb936af7422522F92372Da95D",
      "txHash": "0xa5e851d28d2393645e409774bfbab91dd35560f33901c62569a98fa87bed975e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeRate",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:33"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeWallet",
            "type": "t_address_payable",
            "src": "contracts/SellNFT.sol:34"
          },
          {
            "contract": "SellNFT",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:35"
          },
          {
            "contract": "SellNFT",
            "label": "_orderIdCounter",
            "type": "t_struct(Counter)2530_storage",
            "src": "contracts/SellNFT.sol:37"
          },
          {
            "contract": "SellNFT",
            "label": "orders",
            "type": "t_mapping(t_uint256,t_struct(Order)10604_storage)",
            "src": "contracts/SellNFT.sol:38"
          },
          {
            "contract": "SellNFT",
            "label": "tokenFromCollectionIsOnSales",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SellNFT.sol:40"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_struct(Counter)2530_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)10604_storage)": {
            "label": "mapping(uint256 => struct SellNFT.Order)"
          },
          "t_struct(Order)10604_storage": {
            "label": "struct SellNFT.Order",
            "members": [
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address_payable"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "numberOfCopies",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)10607"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(OrderStatus)10607": {
            "label": "enum SellNFT.OrderStatus",
            "members": [
              "ON_SALES",
              "COMPLETED"
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c02008dd467a409a7edd1dd83b59eee404ec64b7aa8832fa94d6d25100dfcbed": {
      "address": "0xAECf6FfA819Cbd849fd5dFC5299793334Bc46103",
      "txHash": "0xe796eb766ca4f58bbcdd6458b50ce715912603ac9712061dbac5cede481f5544",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "SellNFT",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/SellNFT.sol:37"
          },
          {
            "contract": "SellNFT",
            "label": "_orderIdCounter",
            "type": "t_struct(Counter)2463_storage",
            "src": "contracts/SellNFT.sol:39"
          },
          {
            "contract": "SellNFT",
            "label": "orders",
            "type": "t_mapping(t_uint256,t_struct(Order)9315_storage)",
            "src": "contracts/SellNFT.sol:40"
          },
          {
            "contract": "SellNFT",
            "label": "tokenFromCollectionIsOnSales",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SellNFT.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2463_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)9315_storage)": {
            "label": "mapping(uint256 => struct SellNFT.Order)"
          },
          "t_struct(Order)9315_storage": {
            "label": "struct SellNFT.Order",
            "members": [
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address_payable"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "numberOfCopies",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)9342"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_enum(OrderStatus)9342": {
            "label": "enum SellNFT.OrderStatus",
            "members": [
              "ON_SALES",
              "COMPLETED"
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "82ed47033951ef72365beb79352f1d2553090dce5168c9431f5cdfcf216c6ce8": {
      "address": "0x7aDeb39407809742E91E1647C4b5AC1f56391197",
      "txHash": "0xeaf081331c78c178d71f08798f2b03cd6880bd15617f26a42ad76a3afb2984bb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/DefiForYouNFTFactory.sol:25"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionCreatingFee",
            "type": "t_uint256",
            "src": "contracts/DefiForYouNFTFactory.sol:26"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "whitelistedFeeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/DefiForYouNFTFactory.sol:27"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionsByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)8960)dyn_storage)",
            "src": "contracts/DefiForYouNFTFactory.sol:29"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/DefiForYouNFTFactory.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)8960)dyn_storage)": {
            "label": "mapping(address => contract DefiForYouNFT[])"
          },
          "t_array(t_contract(DefiForYouNFT)8960)dyn_storage": {
            "label": "contract DefiForYouNFT[]"
          },
          "t_contract(DefiForYouNFT)8960": {
            "label": "contract DefiForYouNFT"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9ca3fcde0d53f86a383ed682f0856897ad56821c0c1c2f2ba0b1b2a080be3751": {
      "address": "0x4EA433531f7C2AF038ed0D3A53a6aB0E9c1C5261",
      "txHash": "0x884ce99630c6db215a0fb51dd1a2ac1c750533522e868e76753207d47000fa0c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/hub/Hub.sol:26"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)10893_storage",
            "src": "contracts/hub/Hub.sol:28"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)10908_storage",
            "src": "contracts/hub/Hub.sol:29"
          },
          {
            "contract": "Hub",
            "label": "pawnNFTConfig",
            "type": "t_struct(PawnNFTConfig)10927_storage",
            "src": "contracts/hub/Hub.sol:30"
          },
          {
            "contract": "Hub",
            "label": "nftCollectionConfig",
            "type": "t_struct(NFTCollectionConfig)10932_storage",
            "src": "contracts/hub/Hub.sol:31"
          },
          {
            "contract": "Hub",
            "label": "nftMarketConfig",
            "type": "t_struct(NFTMarketConfig)10939_storage",
            "src": "contracts/hub/Hub.sol:32"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(SystemConfig)10893_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)10908_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(PawnNFTConfig)10927_storage": {
            "label": "struct HubInterface.PawnNFTConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedEvaluationContract",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_struct(NFTCollectionConfig)10932_storage": {
            "label": "struct HubInterface.NFTCollectionConfig",
            "members": [
              {
                "label": "collectionCreatingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(NFTMarketConfig)10939_storage": {
            "label": "struct HubInterface.NFTMarketConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeWallet",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e022fa41c6370129e241d2f7c152808802301218ab04f274376eea1f31ecc32f": {
      "address": "0xb1Aa1d2197ABB46a986Ba2707CA499f9897552C2",
      "txHash": "0x1f42c94a6bec616eeff4971d53852470d14f44577cac6b9d9cd2fb91025948b5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AuctionNFT",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/AuctionNFT.sol:36"
          },
          {
            "contract": "AuctionNFT",
            "label": "_auctionIdCounter",
            "type": "t_struct(Counter)2530_storage",
            "src": "contracts/AuctionNFT.sol:38"
          },
          {
            "contract": "AuctionNFT",
            "label": "auctions",
            "type": "t_mapping(t_uint256,t_struct(AuctionSession)8701_storage)",
            "src": "contracts/AuctionNFT.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2530_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(AuctionSession)8701_storage)": {
            "label": "mapping(uint256 => struct AuctionNFT.AuctionSession)"
          },
          "t_struct(AuctionSession)8701_storage": {
            "label": "struct AuctionNFT.AuctionSession",
            "members": [
              {
                "label": "auctionData",
                "type": "t_struct(AuctionData)8720_storage"
              },
              {
                "label": "bidValue",
                "type": "t_uint256"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AuctionStatus)8726"
              }
            ]
          },
          "t_struct(AuctionData)8720_storage": {
            "label": "struct AuctionNFT.AuctionData",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "buyOutPrice",
                "type": "t_uint256"
              },
              {
                "label": "priceStep",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(AuctionStatus)8726": {
            "label": "enum AuctionNFT.AuctionStatus",
            "members": [
              "PENDING",
              "APPROVED",
              "REJECTED",
              "FINISHED",
              "CANCELLED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "c71a158dcf7ca5e424c5fa8a01b2e4d4a6bd16beccf6bdb1be0c31199d8de40b": {
      "address": "0xa8383739371d24ff0496Dc6514f1f3c138F6867F",
      "txHash": "0xadaa018b8f8bcaf81eb9c9719da8ebcad080bb730e197572a844799911a46711",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/dfy-nft/DefiForYouNFTFactory.sol:25"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionCreatingFee",
            "type": "t_uint256",
            "src": "contracts/dfy-nft/DefiForYouNFTFactory.sol:26"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "whitelistedFeeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/dfy-nft/DefiForYouNFTFactory.sol:27"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionsByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)11275)dyn_storage)",
            "src": "contracts/dfy-nft/DefiForYouNFTFactory.sol:29"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/dfy-nft/DefiForYouNFTFactory.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)11275)dyn_storage)": {
            "label": "mapping(address => contract DefiForYouNFT[])"
          },
          "t_array(t_contract(DefiForYouNFT)11275)dyn_storage": {
            "label": "contract DefiForYouNFT[]"
          },
          "t_contract(DefiForYouNFT)11275": {
            "label": "contract DefiForYouNFT"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "066e6d2a4f0f94797020557d5e99098bdf7e37c319b5a9ad007fec3cee6e5373": {
      "address": "0x158a39Dd301b07E983026ea0DDbead678bAE5410",
      "txHash": "0x6f7dfaf5401710eb9bffa3d46c3c7c0c9a138d73d41f9e9ae7320c0d3eeb18af",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AuctionNFT",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/AuctionNFT.sol:36"
          },
          {
            "contract": "AuctionNFT",
            "label": "_auctionIdCounter",
            "type": "t_struct(Counter)1749_storage",
            "src": "contracts/AuctionNFT.sol:38"
          },
          {
            "contract": "AuctionNFT",
            "label": "auctions",
            "type": "t_mapping(t_uint256,t_struct(AuctionSession)6981_storage)",
            "src": "contracts/AuctionNFT.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1749_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(AuctionSession)6981_storage)": {
            "label": "mapping(uint256 => struct AuctionNFT.AuctionSession)"
          },
          "t_struct(AuctionSession)6981_storage": {
            "label": "struct AuctionNFT.AuctionSession",
            "members": [
              {
                "label": "auctionData",
                "type": "t_struct(AuctionData)7000_storage"
              },
              {
                "label": "bidValue",
                "type": "t_uint256"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AuctionStatus)7006"
              }
            ]
          },
          "t_struct(AuctionData)7000_storage": {
            "label": "struct AuctionNFT.AuctionData",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "buyOutPrice",
                "type": "t_uint256"
              },
              {
                "label": "priceStep",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(AuctionStatus)7006": {
            "label": "enum AuctionNFT.AuctionStatus",
            "members": [
              "PENDING",
              "APPROVED",
              "REJECTED",
              "FINISHED",
              "CANCELLED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "0794a100b7a305a7e19dcb0bf78ea44ddd88d4ba4f0ae2a56d6e27a8b95fce55": {
      "address": "0x39a7979870146D6A0f57622acb9B327F22aD85C8",
      "txHash": "0x134aba212a92345b2571b23b3419d9a68b37e7c1e512f9128e6f5f73be252257",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AuctionNFT",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/AuctionNFT.sol:36"
          },
          {
            "contract": "AuctionNFT",
            "label": "_auctionIdCounter",
            "type": "t_struct(Counter)1749_storage",
            "src": "contracts/AuctionNFT.sol:38"
          },
          {
            "contract": "AuctionNFT",
            "label": "auctions",
            "type": "t_mapping(t_uint256,t_struct(AuctionSession)6981_storage)",
            "src": "contracts/AuctionNFT.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1749_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(AuctionSession)6981_storage)": {
            "label": "mapping(uint256 => struct AuctionNFT.AuctionSession)"
          },
          "t_struct(AuctionSession)6981_storage": {
            "label": "struct AuctionNFT.AuctionSession",
            "members": [
              {
                "label": "auctionData",
                "type": "t_struct(AuctionData)7000_storage"
              },
              {
                "label": "bidValue",
                "type": "t_uint256"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AuctionStatus)7006"
              }
            ]
          },
          "t_struct(AuctionData)7000_storage": {
            "label": "struct AuctionNFT.AuctionData",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "buyOutPrice",
                "type": "t_uint256"
              },
              {
                "label": "priceStep",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(AuctionStatus)7006": {
            "label": "enum AuctionNFT.AuctionStatus",
            "members": [
              "PENDING",
              "APPROVED",
              "REJECTED",
              "FINISHED",
              "CANCELLED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "5418603d14a1389ddb4b584304f82133fbc76751ea6123ff3275b67a63d0f2d8": {
      "address": "0x8B3464500fe289318dAfdcB372cF26C57dDc87c9",
      "txHash": "0x5eaaa52a344c595d2dd61cfce11c452197f969627c560d163728eb38a37015db",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AuctionNFT",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/AuctionNFT.sol:36"
          },
          {
            "contract": "AuctionNFT",
            "label": "_auctionIdCounter",
            "type": "t_struct(Counter)2530_storage",
            "src": "contracts/AuctionNFT.sol:38"
          },
          {
            "contract": "AuctionNFT",
            "label": "auctions",
            "type": "t_mapping(t_uint256,t_struct(AuctionSession)8701_storage)",
            "src": "contracts/AuctionNFT.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2530_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(AuctionSession)8701_storage)": {
            "label": "mapping(uint256 => struct AuctionNFT.AuctionSession)"
          },
          "t_struct(AuctionSession)8701_storage": {
            "label": "struct AuctionNFT.AuctionSession",
            "members": [
              {
                "label": "auctionData",
                "type": "t_struct(AuctionData)8720_storage"
              },
              {
                "label": "bidValue",
                "type": "t_uint256"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AuctionStatus)8726"
              }
            ]
          },
          "t_struct(AuctionData)8720_storage": {
            "label": "struct AuctionNFT.AuctionData",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "buyOutPrice",
                "type": "t_uint256"
              },
              {
                "label": "priceStep",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(AuctionStatus)8726": {
            "label": "enum AuctionNFT.AuctionStatus",
            "members": [
              "PENDING",
              "APPROVED",
              "REJECTED",
              "FINISHED",
              "CANCELLED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "038ab22ee760fa84208c45cf80a50485d98c7fc5dde98f40df758ab9d7ea768d": {
      "address": "0x6F085BBB8DC47f41b9A53899D7f1838D6df88762",
      "txHash": "0x82b0a6b006fa35561efe8208df4a1ca2f4521ce27bd71b7cb6c84035d12c1c22",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AuctionNFT",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/AuctionNFT.sol:36"
          },
          {
            "contract": "AuctionNFT",
            "label": "_auctionIdCounter",
            "type": "t_struct(Counter)1749_storage",
            "src": "contracts/AuctionNFT.sol:38"
          },
          {
            "contract": "AuctionNFT",
            "label": "auctions",
            "type": "t_mapping(t_uint256,t_struct(AuctionSession)6981_storage)",
            "src": "contracts/AuctionNFT.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1749_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(AuctionSession)6981_storage)": {
            "label": "mapping(uint256 => struct AuctionNFT.AuctionSession)"
          },
          "t_struct(AuctionSession)6981_storage": {
            "label": "struct AuctionNFT.AuctionSession",
            "members": [
              {
                "label": "auctionData",
                "type": "t_struct(AuctionData)7000_storage"
              },
              {
                "label": "bidValue",
                "type": "t_uint256"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AuctionStatus)7006"
              }
            ]
          },
          "t_struct(AuctionData)7000_storage": {
            "label": "struct AuctionNFT.AuctionData",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "buyOutPrice",
                "type": "t_uint256"
              },
              {
                "label": "priceStep",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(AuctionStatus)7006": {
            "label": "enum AuctionNFT.AuctionStatus",
            "members": [
              "PENDING",
              "APPROVED",
              "REJECTED",
              "FINISHED",
              "CANCELLED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "97addc26a09c56df0129658bd88f07e1c654528bb01195bc7444f946bb4d3c53": {
      "address": "0x372917191f421fd9511562ff60604C2574897ab2",
      "txHash": "0x00de59be5391a742fd08c2a45680be1121ba2e03edb165eae8ba4518e9c80cfb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AuctionNFT",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/AuctionNFT.sol:36"
          },
          {
            "contract": "AuctionNFT",
            "label": "_auctionIdCounter",
            "type": "t_struct(Counter)1749_storage",
            "src": "contracts/AuctionNFT.sol:38"
          },
          {
            "contract": "AuctionNFT",
            "label": "auctions",
            "type": "t_mapping(t_uint256,t_struct(AuctionSession)6981_storage)",
            "src": "contracts/AuctionNFT.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1749_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(AuctionSession)6981_storage)": {
            "label": "mapping(uint256 => struct AuctionNFT.AuctionSession)"
          },
          "t_struct(AuctionSession)6981_storage": {
            "label": "struct AuctionNFT.AuctionSession",
            "members": [
              {
                "label": "auctionData",
                "type": "t_struct(AuctionData)7000_storage"
              },
              {
                "label": "bidValue",
                "type": "t_uint256"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AuctionStatus)7006"
              }
            ]
          },
          "t_struct(AuctionData)7000_storage": {
            "label": "struct AuctionNFT.AuctionData",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "buyOutPrice",
                "type": "t_uint256"
              },
              {
                "label": "priceStep",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(AuctionStatus)7006": {
            "label": "enum AuctionNFT.AuctionStatus",
            "members": [
              "PENDING",
              "APPROVED",
              "REJECTED",
              "FINISHED",
              "CANCELLED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "3fde44286dc179ecec155843f34df077df7153e030750321e57f2299aa69e28a": {
      "address": "0xe848CD32FFcbB823ffe0C932FD7E5B537F54070A",
      "txHash": "0xa28d03932b26faa99552b1e6dba3300b66a3b573e9ca0c55426b702b59d973be",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AuctionNFT",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/AuctionNFT.sol:36"
          },
          {
            "contract": "AuctionNFT",
            "label": "_auctionIdCounter",
            "type": "t_struct(Counter)1749_storage",
            "src": "contracts/AuctionNFT.sol:38"
          },
          {
            "contract": "AuctionNFT",
            "label": "auctions",
            "type": "t_mapping(t_uint256,t_struct(AuctionSession)6981_storage)",
            "src": "contracts/AuctionNFT.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1749_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(AuctionSession)6981_storage)": {
            "label": "mapping(uint256 => struct AuctionNFT.AuctionSession)"
          },
          "t_struct(AuctionSession)6981_storage": {
            "label": "struct AuctionNFT.AuctionSession",
            "members": [
              {
                "label": "auctionData",
                "type": "t_struct(AuctionData)7000_storage"
              },
              {
                "label": "bidValue",
                "type": "t_uint256"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AuctionStatus)7006"
              }
            ]
          },
          "t_struct(AuctionData)7000_storage": {
            "label": "struct AuctionNFT.AuctionData",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "buyOutPrice",
                "type": "t_uint256"
              },
              {
                "label": "priceStep",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(AuctionStatus)7006": {
            "label": "enum AuctionNFT.AuctionStatus",
            "members": [
              "PENDING",
              "APPROVED",
              "REJECTED",
              "FINISHED",
              "CANCELLED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "215f880348cfc0da18260f42c7842406d8e95db36da14ad7115af2b13a0ce35b": {
      "address": "0x7Fa6eb4994dac79186789B93e7A30EA07E3d3e29",
      "txHash": "0xaf32c5f16a17f94c6255df0574ce88d957a7b0815877db5345ff2883e1d048be",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AuctionNFT",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/AuctionNFT.sol:34"
          },
          {
            "contract": "AuctionNFT",
            "label": "_auctionIdCounter",
            "type": "t_struct(Counter)2530_storage",
            "src": "contracts/AuctionNFT.sol:36"
          },
          {
            "contract": "AuctionNFT",
            "label": "auctions",
            "type": "t_mapping(t_uint256,t_struct(AuctionSession)8701_storage)",
            "src": "contracts/AuctionNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2530_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(AuctionSession)8701_storage)": {
            "label": "mapping(uint256 => struct AuctionNFT.AuctionSession)"
          },
          "t_struct(AuctionSession)8701_storage": {
            "label": "struct AuctionNFT.AuctionSession",
            "members": [
              {
                "label": "auctionData",
                "type": "t_struct(AuctionData)8720_storage"
              },
              {
                "label": "bidValue",
                "type": "t_uint256"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AuctionStatus)8726"
              }
            ]
          },
          "t_struct(AuctionData)8720_storage": {
            "label": "struct AuctionNFT.AuctionData",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "buyOutPrice",
                "type": "t_uint256"
              },
              {
                "label": "priceStep",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(AuctionStatus)8726": {
            "label": "enum AuctionNFT.AuctionStatus",
            "members": [
              "PENDING",
              "APPROVED",
              "REJECTED",
              "FINISHED",
              "CANCELLED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "a7083294633e2a2d68adc5d5fc14aa43bd019f67338d8e2050f252bb4cbc433e": {
      "address": "0x6B7bfb8258D6d747d2Aee086904e1755Ca17dF15",
      "txHash": "0x3f1530a7decf4ec58c39c71db6bdaa68ad465c62c2dee59fa1f9ee5da5487a79",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AuctionNFT",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/AuctionNFT.sol:34"
          },
          {
            "contract": "AuctionNFT",
            "label": "_auctionIdCounter",
            "type": "t_struct(Counter)2530_storage",
            "src": "contracts/AuctionNFT.sol:36"
          },
          {
            "contract": "AuctionNFT",
            "label": "auctions",
            "type": "t_mapping(t_uint256,t_struct(AuctionSession)8701_storage)",
            "src": "contracts/AuctionNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2530_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(AuctionSession)8701_storage)": {
            "label": "mapping(uint256 => struct AuctionNFT.AuctionSession)"
          },
          "t_struct(AuctionSession)8701_storage": {
            "label": "struct AuctionNFT.AuctionSession",
            "members": [
              {
                "label": "auctionData",
                "type": "t_struct(AuctionData)8720_storage"
              },
              {
                "label": "bidValue",
                "type": "t_uint256"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AuctionStatus)8726"
              }
            ]
          },
          "t_struct(AuctionData)8720_storage": {
            "label": "struct AuctionNFT.AuctionData",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "buyOutPrice",
                "type": "t_uint256"
              },
              {
                "label": "priceStep",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(AuctionStatus)8726": {
            "label": "enum AuctionNFT.AuctionStatus",
            "members": [
              "PENDING",
              "APPROVED",
              "REJECTED",
              "FINISHED",
              "CANCELLED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "4aad273457ffc99ff925ec5c95db08310f59ecea17a4906080cf76333386512a": {
      "address": "0x8bbd559f79b1b930ce7Eb10F857bF693F8Ac3Cf5",
      "txHash": "0x35616c521f084d23bef75b6895012cdee907024302b690baa4965dd83de06e26",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AuctionNFT",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/AuctionNFT.sol:34"
          },
          {
            "contract": "AuctionNFT",
            "label": "_auctionIdCounter",
            "type": "t_struct(Counter)1749_storage",
            "src": "contracts/AuctionNFT.sol:36"
          },
          {
            "contract": "AuctionNFT",
            "label": "auctions",
            "type": "t_mapping(t_uint256,t_struct(AuctionSession)6981_storage)",
            "src": "contracts/AuctionNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1749_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(AuctionSession)6981_storage)": {
            "label": "mapping(uint256 => struct AuctionNFT.AuctionSession)"
          },
          "t_struct(AuctionSession)6981_storage": {
            "label": "struct AuctionNFT.AuctionSession",
            "members": [
              {
                "label": "auctionData",
                "type": "t_struct(AuctionData)7000_storage"
              },
              {
                "label": "bidValue",
                "type": "t_uint256"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AuctionStatus)7006"
              }
            ]
          },
          "t_struct(AuctionData)7000_storage": {
            "label": "struct AuctionNFT.AuctionData",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "buyOutPrice",
                "type": "t_uint256"
              },
              {
                "label": "priceStep",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(AuctionStatus)7006": {
            "label": "enum AuctionNFT.AuctionStatus",
            "members": [
              "PENDING",
              "APPROVED",
              "REJECTED",
              "FINISHED",
              "CANCELLED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "002138cf308359cbe31cc7521a9490243904498adeb89a538a2ecc276e573c3f": {
      "address": "0x975169578778522264C7385d2E3eca23E8115d48",
      "txHash": "0xe1c085c8c44f4113311bc3c66484cd9c59c7c3e2ed2f2d5576ee86c7275ff53b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AuctionNFT",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/AuctionNFT.sol:34"
          },
          {
            "contract": "AuctionNFT",
            "label": "_auctionIdCounter",
            "type": "t_struct(Counter)1749_storage",
            "src": "contracts/AuctionNFT.sol:36"
          },
          {
            "contract": "AuctionNFT",
            "label": "auctions",
            "type": "t_mapping(t_uint256,t_struct(AuctionSession)6981_storage)",
            "src": "contracts/AuctionNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1749_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(AuctionSession)6981_storage)": {
            "label": "mapping(uint256 => struct AuctionNFT.AuctionSession)"
          },
          "t_struct(AuctionSession)6981_storage": {
            "label": "struct AuctionNFT.AuctionSession",
            "members": [
              {
                "label": "auctionData",
                "type": "t_struct(AuctionData)7000_storage"
              },
              {
                "label": "bidValue",
                "type": "t_uint256"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AuctionStatus)7006"
              }
            ]
          },
          "t_struct(AuctionData)7000_storage": {
            "label": "struct AuctionNFT.AuctionData",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "buyOutPrice",
                "type": "t_uint256"
              },
              {
                "label": "priceStep",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(AuctionStatus)7006": {
            "label": "enum AuctionNFT.AuctionStatus",
            "members": [
              "PENDING",
              "APPROVED",
              "REJECTED",
              "FINISHED",
              "CANCELLED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "d9545429a7aa323aa8afd33f3e07ce6cc9ae7e8f5ecd988722e0d4894b32a725": {
      "address": "0xcf605f3Db42fdecF3Dc75426B06c83756788665A",
      "txHash": "0x774fffd69f1ca663b043ea413cd48e323b67e7f2ca5d28afec839ca430f87c6b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AuctionNFT",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/AuctionNFT.sol:34"
          },
          {
            "contract": "AuctionNFT",
            "label": "_auctionIdCounter",
            "type": "t_struct(Counter)2530_storage",
            "src": "contracts/AuctionNFT.sol:36"
          },
          {
            "contract": "AuctionNFT",
            "label": "auctions",
            "type": "t_mapping(t_uint256,t_struct(AuctionSession)8701_storage)",
            "src": "contracts/AuctionNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2530_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(AuctionSession)8701_storage)": {
            "label": "mapping(uint256 => struct AuctionNFT.AuctionSession)"
          },
          "t_struct(AuctionSession)8701_storage": {
            "label": "struct AuctionNFT.AuctionSession",
            "members": [
              {
                "label": "auctionData",
                "type": "t_struct(AuctionData)8720_storage"
              },
              {
                "label": "bidValue",
                "type": "t_uint256"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AuctionStatus)8726"
              }
            ]
          },
          "t_struct(AuctionData)8720_storage": {
            "label": "struct AuctionNFT.AuctionData",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "buyOutPrice",
                "type": "t_uint256"
              },
              {
                "label": "priceStep",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(AuctionStatus)8726": {
            "label": "enum AuctionNFT.AuctionStatus",
            "members": [
              "PENDING",
              "APPROVED",
              "REJECTED",
              "FINISHED",
              "CANCELLED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "c88168864571f73fc06ee8423d3f863c5b1865cb74e2915948c12e4d6ec1a9a7": {
      "address": "0x8255551483441dE8651A7dc3F5af685B7744278D",
      "txHash": "0x388960ad62616ffe1724d111925d7db97adb882855fbef7c762d5a2bfda9897d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AuctionNFT",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/AuctionNFT.sol:34"
          },
          {
            "contract": "AuctionNFT",
            "label": "_auctionIdCounter",
            "type": "t_struct(Counter)1749_storage",
            "src": "contracts/AuctionNFT.sol:36"
          },
          {
            "contract": "AuctionNFT",
            "label": "auctions",
            "type": "t_mapping(t_uint256,t_struct(AuctionSession)6981_storage)",
            "src": "contracts/AuctionNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1749_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(AuctionSession)6981_storage)": {
            "label": "mapping(uint256 => struct AuctionNFT.AuctionSession)"
          },
          "t_struct(AuctionSession)6981_storage": {
            "label": "struct AuctionNFT.AuctionSession",
            "members": [
              {
                "label": "auctionData",
                "type": "t_struct(AuctionData)7000_storage"
              },
              {
                "label": "bidValue",
                "type": "t_uint256"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AuctionStatus)7006"
              }
            ]
          },
          "t_struct(AuctionData)7000_storage": {
            "label": "struct AuctionNFT.AuctionData",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "buyOutPrice",
                "type": "t_uint256"
              },
              {
                "label": "priceStep",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(AuctionStatus)7006": {
            "label": "enum AuctionNFT.AuctionStatus",
            "members": [
              "PENDING",
              "APPROVED",
              "REJECTED",
              "FINISHED",
              "CANCELLED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "768a0b2c8c9a984e2bf362efa5524e3be836e3e5df3c56ece0df76020cffdec4": {
      "address": "0x3256E91f7433c872F6aA486Ac2432e9f12aa10aB",
      "txHash": "0x0f2c98b6a61fdb3f4f85ca30d3665267a9caa27dbecb28988ad2e7c12d77e455",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AuctionNFT",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/AuctionNFT.sol:34"
          },
          {
            "contract": "AuctionNFT",
            "label": "_auctionIdCounter",
            "type": "t_struct(Counter)1749_storage",
            "src": "contracts/AuctionNFT.sol:36"
          },
          {
            "contract": "AuctionNFT",
            "label": "auctions",
            "type": "t_mapping(t_uint256,t_struct(AuctionSession)6981_storage)",
            "src": "contracts/AuctionNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1749_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(AuctionSession)6981_storage)": {
            "label": "mapping(uint256 => struct AuctionNFT.AuctionSession)"
          },
          "t_struct(AuctionSession)6981_storage": {
            "label": "struct AuctionNFT.AuctionSession",
            "members": [
              {
                "label": "auctionData",
                "type": "t_struct(AuctionData)7000_storage"
              },
              {
                "label": "bidValue",
                "type": "t_uint256"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AuctionStatus)7006"
              }
            ]
          },
          "t_struct(AuctionData)7000_storage": {
            "label": "struct AuctionNFT.AuctionData",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "buyOutPrice",
                "type": "t_uint256"
              },
              {
                "label": "priceStep",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(AuctionStatus)7006": {
            "label": "enum AuctionNFT.AuctionStatus",
            "members": [
              "PENDING",
              "APPROVED",
              "REJECTED",
              "FINISHED",
              "CANCELLED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "2fcbb86f0ac9ecb0fecb88d5d10f5a44f801d2284638a71d9840178a75b82405": {
      "address": "0x705bBa7b79973f2B23dA01a9B911B325E702d898",
      "txHash": "0x87456f564e28d08031601fe50219aaf036b6bf5a2542131acc56a80bcfec37b6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AuctionNFT",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/AuctionNFT.sol:34"
          },
          {
            "contract": "AuctionNFT",
            "label": "_auctionIdCounter",
            "type": "t_struct(Counter)1749_storage",
            "src": "contracts/AuctionNFT.sol:36"
          },
          {
            "contract": "AuctionNFT",
            "label": "auctions",
            "type": "t_mapping(t_uint256,t_struct(AuctionSession)6981_storage)",
            "src": "contracts/AuctionNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1749_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(AuctionSession)6981_storage)": {
            "label": "mapping(uint256 => struct AuctionNFT.AuctionSession)"
          },
          "t_struct(AuctionSession)6981_storage": {
            "label": "struct AuctionNFT.AuctionSession",
            "members": [
              {
                "label": "auctionData",
                "type": "t_struct(AuctionData)7000_storage"
              },
              {
                "label": "bidValue",
                "type": "t_uint256"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AuctionStatus)7006"
              }
            ]
          },
          "t_struct(AuctionData)7000_storage": {
            "label": "struct AuctionNFT.AuctionData",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "buyOutPrice",
                "type": "t_uint256"
              },
              {
                "label": "priceStep",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(AuctionStatus)7006": {
            "label": "enum AuctionNFT.AuctionStatus",
            "members": [
              "PENDING",
              "APPROVED",
              "REJECTED",
              "FINISHED",
              "CANCELLED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "f46f2b4b278f160a81499cca77b72c5bc3512ba2f5119d314cd63557cae22bb0": {
      "address": "0x1A488C157f7Af51Ff6A4Cf529f92350D2d10E41d",
      "txHash": "0x65ee28ea6f1c4a32d9b8f9ee39c7a9e47379a597eaa66fcb5ccad76d7b92aa21",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AuctionNFT",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/AuctionNFT.sol:34"
          },
          {
            "contract": "AuctionNFT",
            "label": "_auctionIdCounter",
            "type": "t_struct(Counter)2530_storage",
            "src": "contracts/AuctionNFT.sol:36"
          },
          {
            "contract": "AuctionNFT",
            "label": "auctions",
            "type": "t_mapping(t_uint256,t_struct(AuctionSession)8701_storage)",
            "src": "contracts/AuctionNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2530_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(AuctionSession)8701_storage)": {
            "label": "mapping(uint256 => struct AuctionNFT.AuctionSession)"
          },
          "t_struct(AuctionSession)8701_storage": {
            "label": "struct AuctionNFT.AuctionSession",
            "members": [
              {
                "label": "auctionData",
                "type": "t_struct(AuctionData)8720_storage"
              },
              {
                "label": "bidValue",
                "type": "t_uint256"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AuctionStatus)8726"
              }
            ]
          },
          "t_struct(AuctionData)8720_storage": {
            "label": "struct AuctionNFT.AuctionData",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "buyOutPrice",
                "type": "t_uint256"
              },
              {
                "label": "priceStep",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(AuctionStatus)8726": {
            "label": "enum AuctionNFT.AuctionStatus",
            "members": [
              "PENDING",
              "APPROVED",
              "REJECTED",
              "FINISHED",
              "CANCELLED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "7acd37c9dde7b2595424f709ea1a7f9a0cf90f3a4014cf2368caca6188a5101b": {
      "address": "0x5fb9ddb153Cd117bEC43cDB2eEeC696834F01827",
      "txHash": "0x81171289ddf42f3934d1f93e5acc5a6e4b2b8436c09307d3ed725ed0ff56ea05",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AuctionNFT",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/AuctionNFT.sol:34"
          },
          {
            "contract": "AuctionNFT",
            "label": "_auctionIdCounter",
            "type": "t_struct(Counter)2530_storage",
            "src": "contracts/AuctionNFT.sol:36"
          },
          {
            "contract": "AuctionNFT",
            "label": "auctions",
            "type": "t_mapping(t_uint256,t_struct(AuctionSession)8701_storage)",
            "src": "contracts/AuctionNFT.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2530_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(AuctionSession)8701_storage)": {
            "label": "mapping(uint256 => struct AuctionNFT.AuctionSession)"
          },
          "t_struct(AuctionSession)8701_storage": {
            "label": "struct AuctionNFT.AuctionSession",
            "members": [
              {
                "label": "auctionData",
                "type": "t_struct(AuctionData)8720_storage"
              },
              {
                "label": "bidValue",
                "type": "t_uint256"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AuctionStatus)8726"
              }
            ]
          },
          "t_struct(AuctionData)8720_storage": {
            "label": "struct AuctionNFT.AuctionData",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "buyOutPrice",
                "type": "t_uint256"
              },
              {
                "label": "priceStep",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(AuctionStatus)8726": {
            "label": "enum AuctionNFT.AuctionStatus",
            "members": [
              "PENDING",
              "APPROVED",
              "REJECTED",
              "FINISHED",
              "CANCELLED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "5dde5a21fde392ba501e7033f48bf156ef4dd53c00571d3c2184e1e9abec0941": {
      "address": "0x6EDcE3958604705D19CBf8D480de0E8EC6643B63",
      "txHash": "0xc7ace9950c44058293149fe3d297a2032db150b067877e2aca301b8350084bd1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/hub/Hub.sol:27"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)11677_storage",
            "src": "contracts/hub/Hub.sol:29"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)11692_storage",
            "src": "contracts/hub/Hub.sol:30"
          },
          {
            "contract": "Hub",
            "label": "pawnNFTConfig",
            "type": "t_struct(PawnNFTConfig)11711_storage",
            "src": "contracts/hub/Hub.sol:31"
          },
          {
            "contract": "Hub",
            "label": "nftCollectionConfig",
            "type": "t_struct(NFTCollectionConfig)11716_storage",
            "src": "contracts/hub/Hub.sol:32"
          },
          {
            "contract": "Hub",
            "label": "nftMarketConfig",
            "type": "t_struct(NFTMarketConfig)11723_storage",
            "src": "contracts/hub/Hub.sol:33"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(SystemConfig)11677_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)11692_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(PawnNFTConfig)11711_storage": {
            "label": "struct HubInterface.PawnNFTConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedEvaluationContract",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_struct(NFTCollectionConfig)11716_storage": {
            "label": "struct HubInterface.NFTCollectionConfig",
            "members": [
              {
                "label": "collectionCreatingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(NFTMarketConfig)11723_storage": {
            "label": "struct HubInterface.NFTMarketConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeWallet",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ea5a5cafd2cc0213963f2daecc5f2740301be18fe33715ef6fdc077f4041fd70": {
      "address": "0xE03f54552cC057f0c7B1F0392bfd9778c4B5A084",
      "txHash": "0xafb075ff41e343e9366340de0bc4ed3c3484c8f4e73589594e1c332a669cb158",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/base/BaseContract.sol:25"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionsByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)5923)dyn_storage)",
            "src": "contracts/dfy-nft/DefiForYouNFTFactory.sol:14"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)5923)dyn_storage)": {
            "label": "mapping(address => contract DefiForYouNFT[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_contract(DefiForYouNFT)5923)dyn_storage": {
            "label": "contract DefiForYouNFT[]"
          },
          "t_contract(DefiForYouNFT)5923": {
            "label": "contract DefiForYouNFT"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "76459a48606b2d0ad33c6dc6d990a90c10d9d264751abe2ffdedfe0b24486583": {
      "address": "0x42dD4fd8aD88F25059e57a9116EE88152AF8858B",
      "txHash": "0xd9218e44736b37a1055ec7c6fe9112db55dd9046b8b23365c00639ed27584d09",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/base/BaseContract.sol:25"
          },
          {
            "contract": "SellNFT",
            "label": "_orderIdCounter",
            "type": "t_struct(Counter)1405_storage",
            "src": "contracts/market/SellNFT.sol:25"
          },
          {
            "contract": "SellNFT",
            "label": "orders",
            "type": "t_mapping(t_uint256,t_struct(Order)7802_storage)",
            "src": "contracts/market/SellNFT.sol:26"
          },
          {
            "contract": "SellNFT",
            "label": "_tokenFromCollectionIsOnSales",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/market/SellNFT.sol:28"
          }
        ],
        "types": {
          "t_struct(Counter)1405_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)7802_storage)": {
            "label": "mapping(uint256 => struct ISellNFT.Order)"
          },
          "t_struct(Order)7802_storage": {
            "label": "struct ISellNFT.Order",
            "members": [
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address_payable"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "numberOfCopies",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)7829"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_enum(OrderStatus)7829": {
            "label": "enum ISellNFT.OrderStatus",
            "members": [
              "ON_SALES",
              "COMPLETED"
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "63ca4dbe04b7c3ffbf32415023a1842ae576965d0de61c7a38d5c9de696690f8": {
      "address": "0x875fFAEc976784305d9a1324b242Be90638Ff08b",
      "txHash": "0xfc20668043cd1352200aeb65d58f7c7914911fc467d130bbcd175274051f9819",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/base/BaseContract.sol:25"
          },
          {
            "contract": "AuctionNFT",
            "label": "_auctionIdCounter",
            "type": "t_struct(Counter)1472_storage",
            "src": "contracts/auction/AuctionNFT.sol:23"
          },
          {
            "contract": "AuctionNFT",
            "label": "auctions",
            "type": "t_mapping(t_uint256,t_struct(AuctionSession)7967_storage)",
            "src": "contracts/auction/AuctionNFT.sol:24"
          }
        ],
        "types": {
          "t_struct(Counter)1472_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(AuctionSession)7967_storage)": {
            "label": "mapping(uint256 => struct IAuctionNFT.AuctionSession)"
          },
          "t_struct(AuctionSession)7967_storage": {
            "label": "struct IAuctionNFT.AuctionSession",
            "members": [
              {
                "label": "auctionData",
                "type": "t_struct(AuctionData)7986_storage"
              },
              {
                "label": "bidValue",
                "type": "t_uint256"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AuctionStatus)7992"
              }
            ]
          },
          "t_struct(AuctionData)7986_storage": {
            "label": "struct IAuctionNFT.AuctionData",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "buyOutPrice",
                "type": "t_uint256"
              },
              {
                "label": "priceStep",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(AuctionStatus)7992": {
            "label": "enum IAuctionNFT.AuctionStatus",
            "members": [
              "PENDING",
              "APPROVED",
              "REJECTED",
              "FINISHED",
              "CANCELLED"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "8ebc3ebdf41e3cae3c7d51542d8c4af4dc611205d12de978efff53be10217856": {
      "address": "0x934D0E4344A7789221cdB49af14867A60EA0AD57",
      "txHash": "0x24b93078563d5015d3afffa56f8faefda59b2b475d4587b4d0a2ab76559f67bf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_bytes4,t_struct(Registry)3328_storage)",
            "src": "contracts/hub/Hub.sol:26"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)3333_storage",
            "src": "contracts/hub/Hub.sol:28"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)3348_storage",
            "src": "contracts/hub/Hub.sol:29"
          },
          {
            "contract": "Hub",
            "label": "pawnNFTConfig",
            "type": "t_struct(PawnNFTConfig)3367_storage",
            "src": "contracts/hub/Hub.sol:30"
          },
          {
            "contract": "Hub",
            "label": "nftCollectionConfig",
            "type": "t_struct(NFTCollectionConfig)3372_storage",
            "src": "contracts/hub/Hub.sol:31"
          },
          {
            "contract": "Hub",
            "label": "nftMarketConfig",
            "type": "t_struct(NFTMarketConfig)3379_storage",
            "src": "contracts/hub/Hub.sol:32"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_struct(Registry)3328_storage)": {
            "label": "mapping(bytes4 => struct HubInterface.Registry)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_struct(Registry)3328_storage": {
            "label": "struct HubInterface.Registry",
            "members": [
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "contractName",
                "type": "t_string_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(SystemConfig)3333_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)3348_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(PawnNFTConfig)3367_storage": {
            "label": "struct HubInterface.PawnNFTConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedEvaluationContract",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_struct(NFTCollectionConfig)3372_storage": {
            "label": "struct HubInterface.NFTCollectionConfig",
            "members": [
              {
                "label": "collectionCreatingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(NFTMarketConfig)3379_storage": {
            "label": "struct HubInterface.NFTMarketConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeWallet",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "04cf0a65eeefd57ff91368062bc4d5117e30545336df5db8bb2ea661bc5ab60e": {
      "address": "0x5492486a46e9F754327b174602174dB389b4A50e",
      "txHash": "0x702092b319f01521da1f862ca5de99a35f4dbff1d68a138173998623579e6933",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/base/BaseContract.sol:25"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionsByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)5923)dyn_storage)",
            "src": "contracts/dfy-nft/DefiForYouNFTFactory.sol:14"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)5923)dyn_storage)": {
            "label": "mapping(address => contract DefiForYouNFT[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_contract(DefiForYouNFT)5923)dyn_storage": {
            "label": "contract DefiForYouNFT[]"
          },
          "t_contract(DefiForYouNFT)5923": {
            "label": "contract DefiForYouNFT"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "efd0b353ccd402ed1e2ddd7a08af9e71e86043700c25927a753c32757b5808bb": {
      "address": "0xAd6aF61A82DE5eCa002AaAEb9Cb5ad93b6b6fB5a",
      "txHash": "0xe84252bace02c73165c673c896956a18f1cc02d40ed51ab36f5b539d108f1e41",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/base/BaseContract.sol:25"
          },
          {
            "contract": "AuctionNFT",
            "label": "_auctionIdCounter",
            "type": "t_struct(Counter)2530_storage",
            "src": "contracts/auction/AuctionNFT.sol:23"
          },
          {
            "contract": "AuctionNFT",
            "label": "auctions",
            "type": "t_mapping(t_uint256,t_struct(AuctionSession)10074_storage)",
            "src": "contracts/auction/AuctionNFT.sol:24"
          }
        ],
        "types": {
          "t_struct(Counter)2530_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(AuctionSession)10074_storage)": {
            "label": "mapping(uint256 => struct IAuctionNFT.AuctionSession)"
          },
          "t_struct(AuctionSession)10074_storage": {
            "label": "struct IAuctionNFT.AuctionSession",
            "members": [
              {
                "label": "auctionData",
                "type": "t_struct(AuctionData)10093_storage"
              },
              {
                "label": "bidValue",
                "type": "t_uint256"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AuctionStatus)10099"
              }
            ]
          },
          "t_struct(AuctionData)10093_storage": {
            "label": "struct IAuctionNFT.AuctionData",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "buyOutPrice",
                "type": "t_uint256"
              },
              {
                "label": "priceStep",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(AuctionStatus)10099": {
            "label": "enum IAuctionNFT.AuctionStatus",
            "members": [
              "PENDING",
              "APPROVED",
              "REJECTED",
              "FINISHED",
              "CANCELLED"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    }
  }
}
