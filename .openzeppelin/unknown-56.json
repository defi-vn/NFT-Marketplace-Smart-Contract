{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xa766AD06aa825A167e7a2E0Dd4fDb7F35a4C496F",
      "txHash": "0xd0fc788369daa13e6004fb9a2445f1f5a8d3e60dc82b4c1840a56ca606047da7",
      "kind": "uups"
    },
    {
      "address": "0x2714A6e4219b7aC329C988175C585d587f52a757",
      "txHash": "0xa4d64836c386ef86b3d76ff28a43262418106a4d5cd8de0e13c700dbd07420b7",
      "kind": "uups"
    },
    {
      "address": "0x0B918C44977275cE660b6CC9f0801C1cf463eAAB",
      "txHash": "0x12ac33be110277f794cf3fe8304b0a68fa8e02770d495fc6aa3336b086cb72c9",
      "kind": "uups"
    },
    {
      "address": "0x1888893F3370af06b413D6259D0e420971d07CA0",
      "txHash": "0x089de24a708fc17c9ae32072b4dccd1cc0ede951d1fbac54c860fb9d6f80dd86",
      "kind": "uups"
    },
    {
      "address": "0x3be5ea712719A986281379023fBAEa99F1e7FcB1",
      "txHash": "0xfbd494ca45f47baea807cc4dc2ef95628c6cefc443719848a4bdcca981d86aad",
      "kind": "uups"
    },
    {
      "address": "0x8d5A02CB0848fe02fDCA35a62dE7408d7C9dD543",
      "txHash": "0xcb43e9e14952102c2ab28d28d326d954f7d16cae7ae0bb05535e37c304b92946",
      "kind": "uups"
    },
    {
      "address": "0x8b3Ab5CdA6C6249e2c1A75c8122690B366B5aB9A",
      "txHash": "0x54542efc61552b0bdd0d365099c82fa99a12543d4474c7684fb3f571279ddfbd",
      "kind": "uups"
    },
    {
      "address": "0xA04391885543054E1d92861b97c1933D3E4501DA",
      "txHash": "0x22fa45ebdb8d559c4fb09c1f9d8bd774c2062429e98992b2daa54fe5e0dd2071",
      "kind": "uups"
    }
  ],
  "impls": {
    "5a14b8cc144bb21d9cd94d101ebd696a25e0f14031d7b18385e8dbbc9cdab5e3": {
      "address": "0x99a71722f2EeE65D2758702542ba95fEF569C62C",
      "txHash": "0x7365113819b89cdce0d02d9df1303fb47101550ca061b6599ab69a36137d17a3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_bytes4,t_struct(Registry)12037_storage)",
            "src": "contracts/hub/Hub.sol:27"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)12042_storage",
            "src": "contracts/hub/Hub.sol:29"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)12057_storage",
            "src": "contracts/hub/Hub.sol:30"
          },
          {
            "contract": "Hub",
            "label": "pawnNFTConfig",
            "type": "t_struct(PawnNFTConfig)12072_storage",
            "src": "contracts/hub/Hub.sol:31"
          },
          {
            "contract": "Hub",
            "label": "nftCollectionConfig",
            "type": "t_struct(NFTCollectionConfig)12077_storage",
            "src": "contracts/hub/Hub.sol:32"
          },
          {
            "contract": "Hub",
            "label": "nftMarketConfig",
            "type": "t_struct(NFTMarketConfig)12084_storage",
            "src": "contracts/hub/Hub.sol:33"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_struct(Registry)12037_storage)": {
            "label": "mapping(bytes4 => struct HubInterface.Registry)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_struct(Registry)12037_storage": {
            "label": "struct HubInterface.Registry",
            "members": [
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "contractName",
                "type": "t_string_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(SystemConfig)12042_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)12057_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(PawnNFTConfig)12072_storage": {
            "label": "struct HubInterface.PawnNFTConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_struct(NFTCollectionConfig)12077_storage": {
            "label": "struct HubInterface.NFTCollectionConfig",
            "members": [
              {
                "label": "collectionCreatingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(NFTMarketConfig)12084_storage": {
            "label": "struct HubInterface.NFTMarketConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeWallet",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f0a1840870cb6530bc66fc2db5888fdae36ac342b25fc57f20e343c558cec9a9": {
      "address": "0xFf0e44C57b2b6996556166A5eFE24A029695041E",
      "txHash": "0x21a28c925d8dd259a0d334f12a9a40b794953169338ef93e5a2c287955317e54",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/base/BaseContract.sol:26"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionsByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)10803)dyn_storage)",
            "src": "contracts/dfy-nft/DefiForYouNFTFactory.sol:14"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)10803)dyn_storage)": {
            "label": "mapping(address => contract DefiForYouNFT[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_contract(DefiForYouNFT)10803)dyn_storage": {
            "label": "contract DefiForYouNFT[]"
          },
          "t_contract(DefiForYouNFT)10803": {
            "label": "contract DefiForYouNFT"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "19462a9313197a39625df4b3746e472e765aaa88c37b7dd4af75fb3c7f1e8e47": {
      "address": "0x66B6D80878E81fA847ee9E7A24D8e138132Bc2Bd",
      "txHash": "0xced6eabc0c95f397711d9938fa0f462a9a93e2f21464ea73587a4124e1c10bae",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/base/BaseContract.sol:26"
          },
          {
            "contract": "SellNFT",
            "label": "_orderIdCounter",
            "type": "t_struct(Counter)2530_storage",
            "src": "contracts/market/SellNFT.sol:24"
          },
          {
            "contract": "SellNFT",
            "label": "orders",
            "type": "t_mapping(t_uint256,t_struct(Order)12498_storage)",
            "src": "contracts/market/SellNFT.sol:25"
          },
          {
            "contract": "SellNFT",
            "label": "_tokenFromCollectionIsOnSales",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/market/SellNFT.sol:27"
          }
        ],
        "types": {
          "t_struct(Counter)2530_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)12498_storage)": {
            "label": "mapping(uint256 => struct ISellNFT.Order)"
          },
          "t_struct(Order)12498_storage": {
            "label": "struct ISellNFT.Order",
            "members": [
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address_payable"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "numberOfCopies",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)12525"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_enum(OrderStatus)12525": {
            "label": "enum ISellNFT.OrderStatus",
            "members": [
              "ON_SALES",
              "COMPLETED"
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fc38a01a6aa35652fa6529b7700e85713cc133b0a8a4619129a8890bd9be17ae": {
      "address": "0x680803E8481A0b1772517649B45939ac67D1610C",
      "txHash": "0x026e87283719f42a6688f2da7b66b9ddb0d33edec6d5fd028accb42f713e5ad5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/base/BaseContract.sol:26"
          },
          {
            "contract": "AuctionNFT",
            "label": "_auctionIdCounter",
            "type": "t_struct(Counter)2530_storage",
            "src": "contracts/auction/AuctionNFT.sol:20"
          },
          {
            "contract": "AuctionNFT",
            "label": "auctions",
            "type": "t_mapping(t_uint256,t_struct(AuctionSession)10058_storage)",
            "src": "contracts/auction/AuctionNFT.sol:21"
          }
        ],
        "types": {
          "t_struct(Counter)2530_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(AuctionSession)10058_storage)": {
            "label": "mapping(uint256 => struct IAuctionNFT.AuctionSession)"
          },
          "t_struct(AuctionSession)10058_storage": {
            "label": "struct IAuctionNFT.AuctionSession",
            "members": [
              {
                "label": "auctionData",
                "type": "t_struct(AuctionData)10077_storage"
              },
              {
                "label": "bidValue",
                "type": "t_uint256"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AuctionStatus)10083"
              }
            ]
          },
          "t_struct(AuctionData)10077_storage": {
            "label": "struct IAuctionNFT.AuctionData",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "buyOutPrice",
                "type": "t_uint256"
              },
              {
                "label": "priceStep",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(AuctionStatus)10083": {
            "label": "enum IAuctionNFT.AuctionStatus",
            "members": [
              "PENDING",
              "APPROVED",
              "REJECTED",
              "FINISHED",
              "CANCELLED"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9d3373239a545b350572eacb8933d620f65b333fedf4faae89d82298f048ce08": {
      "address": "0x11DeF06a37fCD003422d2C14fb6A9891A8467732",
      "txHash": "0x71cbe56e9feb711b4d7508199b2be9d022705694a3652155c80a5159b446df54",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_bytes4,t_struct(Registry)12092_storage)",
            "src": "contracts/hub/Hub.sol:28"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)12097_storage",
            "src": "contracts/hub/Hub.sol:30"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)12112_storage",
            "src": "contracts/hub/Hub.sol:31"
          },
          {
            "contract": "Hub",
            "label": "pawnNFTConfig",
            "type": "t_struct(PawnNFTConfig)12127_storage",
            "src": "contracts/hub/Hub.sol:32"
          },
          {
            "contract": "Hub",
            "label": "nftCollectionConfig",
            "type": "t_struct(NFTCollectionConfig)12132_storage",
            "src": "contracts/hub/Hub.sol:33"
          },
          {
            "contract": "Hub",
            "label": "nftMarketConfig",
            "type": "t_struct(NFTMarketConfig)12139_storage",
            "src": "contracts/hub/Hub.sol:34"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_struct(Registry)12092_storage)": {
            "label": "mapping(bytes4 => struct HubInterface.Registry)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_struct(Registry)12092_storage": {
            "label": "struct HubInterface.Registry",
            "members": [
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "contractName",
                "type": "t_string_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(SystemConfig)12097_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)12112_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(PawnNFTConfig)12127_storage": {
            "label": "struct HubInterface.PawnNFTConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_struct(NFTCollectionConfig)12132_storage": {
            "label": "struct HubInterface.NFTCollectionConfig",
            "members": [
              {
                "label": "collectionCreatingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(NFTMarketConfig)12139_storage": {
            "label": "struct HubInterface.NFTMarketConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeWallet",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "656a81f420f45837626b9d8ea565327ee513f85493dce5d3c3907b7b22887515": {
      "address": "0x626515406b51081E1514FE84b72a4A83DF10eDCa",
      "txHash": "0x07bdc5583edee0989a3a4e1e6f10f603e61fc871387b50c0b65e4c6807f5ab01",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_bytes4,t_struct(Registry)12553_storage)",
            "src": "contracts/hub/Hub.sol:28"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)12558_storage",
            "src": "contracts/hub/Hub.sol:30"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)12573_storage",
            "src": "contracts/hub/Hub.sol:31"
          },
          {
            "contract": "Hub",
            "label": "pawnNFTConfig",
            "type": "t_struct(PawnNFTConfig)12588_storage",
            "src": "contracts/hub/Hub.sol:32"
          },
          {
            "contract": "Hub",
            "label": "nftCollectionConfig",
            "type": "t_struct(NFTCollectionConfig)12593_storage",
            "src": "contracts/hub/Hub.sol:33"
          },
          {
            "contract": "Hub",
            "label": "nftMarketConfig",
            "type": "t_struct(NFTMarketConfig)12600_storage",
            "src": "contracts/hub/Hub.sol:34"
          },
          {
            "contract": "Hub",
            "label": "evaluationConfig",
            "type": "t_mapping(t_address,t_struct(EvaluationConfig)12605_storage)",
            "src": "contracts/hub/Hub.sol:39"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_struct(Registry)12553_storage)": {
            "label": "mapping(bytes4 => struct HubInterface.Registry)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_struct(Registry)12553_storage": {
            "label": "struct HubInterface.Registry",
            "members": [
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "contractName",
                "type": "t_string_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(SystemConfig)12558_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)12573_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(PawnNFTConfig)12588_storage": {
            "label": "struct HubInterface.PawnNFTConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_struct(NFTCollectionConfig)12593_storage": {
            "label": "struct HubInterface.NFTCollectionConfig",
            "members": [
              {
                "label": "collectionCreatingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(NFTMarketConfig)12600_storage": {
            "label": "struct HubInterface.NFTMarketConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeWallet",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_struct(EvaluationConfig)12605_storage)": {
            "label": "mapping(address => struct HubInterface.EvaluationConfig)"
          },
          "t_struct(EvaluationConfig)12605_storage": {
            "label": "struct HubInterface.EvaluationConfig",
            "members": [
              {
                "label": "evaluationFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "759621b9fc7f845c9f6d3bbeac99888fe662329055213d389de5c3b7385297ee": {
      "address": "0xD849d589FD1E8Bc88B4a25AF99928A9aeed2d4FA",
      "txHash": "0x936c82e34eebc586fc95debf925e65947fe2b7961f6df1922f3072217c0d89f1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/base/BaseContract.sol:26"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionsByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)10803)dyn_storage)",
            "src": "contracts/dfy-nft/DefiForYouNFTFactory.sol:14"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)10803)dyn_storage)": {
            "label": "mapping(address => contract DefiForYouNFT[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_contract(DefiForYouNFT)10803)dyn_storage": {
            "label": "contract DefiForYouNFT[]"
          },
          "t_contract(DefiForYouNFT)10803": {
            "label": "contract DefiForYouNFT"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "95dd322af5e982cf705fc9cbde633e97dcc49b2291cf52d789251e138fb47cf5": {
      "address": "0x2C7A47E084bb6DB1431ae6AEbF93c0bD80d331DB",
      "txHash": "0xca17ddf5f680c671cfe19a3c0513476a320ed621cecd05713749db895b6b7779",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/base/BaseContract.sol:26"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionsByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)10803)dyn_storage)",
            "src": "contracts/dfy-nft/DefiForYouNFTFactory.sol:14"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)10803)dyn_storage)": {
            "label": "mapping(address => contract DefiForYouNFT[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_contract(DefiForYouNFT)10803)dyn_storage": {
            "label": "contract DefiForYouNFT[]"
          },
          "t_contract(DefiForYouNFT)10803": {
            "label": "contract DefiForYouNFT"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a413efae310eb8892a0acb24e0d20f1fe61fc46c9c3b014683663480a6851094": {
      "address": "0x73A43C575404E077dfcaC051DFA579e8E0EF68bc",
      "txHash": "0x8b0e5d04edc91a38bce733c06a2f382bfb9e1a70f6bf23cc12128be95a154b95",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/base/BaseContract.sol:26"
          },
          {
            "contract": "AuctionNFT",
            "label": "_auctionIdCounter",
            "type": "t_struct(Counter)2530_storage",
            "src": "contracts/auction/AuctionNFT.sol:20"
          },
          {
            "contract": "AuctionNFT",
            "label": "auctions",
            "type": "t_mapping(t_uint256,t_struct(AuctionSession)10058_storage)",
            "src": "contracts/auction/AuctionNFT.sol:21"
          }
        ],
        "types": {
          "t_struct(Counter)2530_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(AuctionSession)10058_storage)": {
            "label": "mapping(uint256 => struct IAuctionNFT.AuctionSession)"
          },
          "t_struct(AuctionSession)10058_storage": {
            "label": "struct IAuctionNFT.AuctionSession",
            "members": [
              {
                "label": "auctionData",
                "type": "t_struct(AuctionData)10077_storage"
              },
              {
                "label": "bidValue",
                "type": "t_uint256"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AuctionStatus)10083"
              }
            ]
          },
          "t_struct(AuctionData)10077_storage": {
            "label": "struct IAuctionNFT.AuctionData",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "buyOutPrice",
                "type": "t_uint256"
              },
              {
                "label": "priceStep",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(AuctionStatus)10083": {
            "label": "enum IAuctionNFT.AuctionStatus",
            "members": [
              "PENDING",
              "APPROVED",
              "REJECTED",
              "FINISHED",
              "CANCELLED"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
