{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0xb20b54da69a4e4369886dc28423160b7fef7ab01520ac0a4dd5e1fff02db6e8f",
      "kind": "uups"
    },
    {
      "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "txHash": "0x75d9489c8b3f04e882ab81f247cfbda9fb1b2be0038a6368ef45bbd925ba3e42",
      "kind": "uups"
    },
    {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0x1b70ecfecdf3a30d12389d4cb48199dc6a14d1e261b04579c54c6aaf6f815521",
      "kind": "uups"
    },
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x4ef04096e097502188821af7c0136b60fd1d1b228356c2083caa0154ace2a70e",
      "kind": "uups"
    },
    {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0x35d79728e8a632f906c5e989090d95ccb3788829ece9d66d9aa63947a70138cf",
      "kind": "uups"
    }
  ],
  "impls": {
    "bcc3d7bff1a742b455c87aca395adbb8aac1c446ef296646257dc7fb4a476c7b": {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0x82cacf2778bcb1eeeb19aa4c984a975c89dc5c04d5913c6659354697f64fa759",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeRate",
            "type": "t_uint256",
            "src": "contracts\\SellNFT.sol:30"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeWallet",
            "type": "t_address",
            "src": "contracts\\SellNFT.sol:31"
          },
          {
            "contract": "SellNFT",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts\\SellNFT.sol:32"
          },
          {
            "contract": "SellNFT",
            "label": "_orderIdCounter",
            "type": "t_struct(Counter)1740_storage",
            "src": "contracts\\SellNFT.sol:34"
          },
          {
            "contract": "SellNFT",
            "label": "orders",
            "type": "t_mapping(t_uint256,t_struct(Order)8680_storage)",
            "src": "contracts\\SellNFT.sol:35"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1740_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)8680_storage)": {
            "label": "mapping(uint256 => struct SellNFT.Order)"
          },
          "t_struct(Order)8680_storage": {
            "label": "struct SellNFT.Order",
            "members": [
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "numberOfCopies",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)8683"
              }
            ]
          },
          "t_enum(OrderStatus)8683": {
            "label": "enum SellNFT.OrderStatus",
            "members": [
              "ON_SALES",
              "COMPLETED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c2927a77a6bc3c93bcd5a92f7f2af026b07197f17ff2402c7d39323b34bece16": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0x450c792a5c8e587a75b8d5212438aad58bd4e960fee64bb804aab93b4157f7e3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/DefiForYouNFTFactory.sol:25"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionCreatingFee",
            "type": "t_uint256",
            "src": "contracts/DefiForYouNFTFactory.sol:26"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "whitelistedFeeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/DefiForYouNFTFactory.sol:27"
          },
          {
            "contract": "DefiForYouNFTFactory",
            "label": "collectionsByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)8300)dyn_storage)",
            "src": "contracts/DefiForYouNFTFactory.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_contract(DefiForYouNFT)8300)dyn_storage)": {
            "label": "mapping(address => contract DefiForYouNFT[])"
          },
          "t_array(t_contract(DefiForYouNFT)8300)dyn_storage": {
            "label": "contract DefiForYouNFT[]"
          },
          "t_contract(DefiForYouNFT)8300": {
            "label": "contract DefiForYouNFT"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "85a3fd3c742adac475277926de62f2fc8849a915443c30007dcad9afadf73ef4": {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0xdb00a53bd8899c31ffc52786c2802696d09f241127e15fd6caf562a8ab026821",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeRate",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:34"
          },
          {
            "contract": "SellNFT",
            "label": "marketFeeWallet",
            "type": "t_address_payable",
            "src": "contracts/SellNFT.sol:35"
          },
          {
            "contract": "SellNFT",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/SellNFT.sol:36"
          },
          {
            "contract": "SellNFT",
            "label": "_orderIdCounter",
            "type": "t_struct(Counter)2463_storage",
            "src": "contracts/SellNFT.sol:38"
          },
          {
            "contract": "SellNFT",
            "label": "orders",
            "type": "t_mapping(t_uint256,t_struct(Order)8636_storage)",
            "src": "contracts/SellNFT.sol:39"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_struct(Counter)2463_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)8636_storage)": {
            "label": "mapping(uint256 => struct SellNFT.Order)"
          },
          "t_struct(Order)8636_storage": {
            "label": "struct SellNFT.Order",
            "members": [
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "numberOfCopies",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)8639"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(OrderStatus)8639": {
            "label": "enum SellNFT.OrderStatus",
            "members": [
              "ON_SALES",
              "COMPLETED"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e0090169555623b4a3ca205ff67c2cdca3feeff7e96951ca7be2aa5ec07e2c5b": {
      "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "txHash": "0x06750ad0223e7d79059313e7392a151ce46b2f255a9eb420065e034dabf38686",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_bytes4,t_struct(Registry)15142_storage)",
            "src": "contracts\\hub\\Hub.sol:32"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)15147_storage",
            "src": "contracts\\hub\\Hub.sol:34"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)15162_storage",
            "src": "contracts\\hub\\Hub.sol:35"
          },
          {
            "contract": "Hub",
            "label": "pawnNFTConfig",
            "type": "t_struct(PawnNFTConfig)15177_storage",
            "src": "contracts\\hub\\Hub.sol:36"
          },
          {
            "contract": "Hub",
            "label": "nftCollectionConfig",
            "type": "t_struct(NFTCollectionConfig)15182_storage",
            "src": "contracts\\hub\\Hub.sol:37"
          },
          {
            "contract": "Hub",
            "label": "nftMarketConfig",
            "type": "t_struct(NFTMarketConfig)15189_storage",
            "src": "contracts\\hub\\Hub.sol:38"
          },
          {
            "contract": "Hub",
            "label": "evaluationConfig",
            "type": "t_mapping(t_address,t_struct(EvaluationConfig)15194_storage)",
            "src": "contracts\\hub\\Hub.sol:43"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_struct(Registry)15142_storage)": {
            "label": "mapping(bytes4 => struct HubInterface.Registry)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_struct(Registry)15142_storage": {
            "label": "struct HubInterface.Registry",
            "members": [
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "contractName",
                "type": "t_string_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(SystemConfig)15147_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)15162_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(PawnNFTConfig)15177_storage": {
            "label": "struct HubInterface.PawnNFTConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_struct(NFTCollectionConfig)15182_storage": {
            "label": "struct HubInterface.NFTCollectionConfig",
            "members": [
              {
                "label": "collectionCreatingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(NFTMarketConfig)15189_storage": {
            "label": "struct HubInterface.NFTMarketConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeWallet",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_struct(EvaluationConfig)15194_storage)": {
            "label": "mapping(address => struct HubInterface.EvaluationConfig)"
          },
          "t_struct(EvaluationConfig)15194_storage": {
            "label": "struct HubInterface.EvaluationConfig",
            "members": [
              {
                "label": "evaluationFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8ace00f8ebfb8f837e4579a2c02ea4ca586576133f624b3b84b05c78e25f7903": {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0x6338e14e86a18656d6f26d160a7e27cc16007aad96fa003cc95f665569b7d88c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:30"
          },
          {
            "contract": "Vesting",
            "label": "_vestingIds",
            "type": "t_struct(Counter)1828_storage",
            "src": "contracts\\vesting\\Vesting.sol:23"
          },
          {
            "contract": "Vesting",
            "label": "_schemeIds",
            "type": "t_struct(Counter)1828_storage",
            "src": "contracts\\vesting\\Vesting.sol:24"
          },
          {
            "contract": "Vesting",
            "label": "vestingInfors",
            "type": "t_mapping(t_uint256,t_struct(VestingInformation)18212_storage)",
            "src": "contracts\\vesting\\Vesting.sol:27"
          },
          {
            "contract": "Vesting",
            "label": "walletToVestingInfor",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\vesting\\Vesting.sol:29"
          },
          {
            "contract": "Vesting",
            "label": "schemeInfos",
            "type": "t_mapping(t_uint256,t_struct(SchemeInformation)18225_storage)",
            "src": "contracts\\vesting\\Vesting.sol:31"
          },
          {
            "contract": "Vesting",
            "label": "preventiveWallet",
            "type": "t_address",
            "src": "contracts\\vesting\\Vesting.sol:34"
          }
        ],
        "types": {
          "t_struct(Counter)1828_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(VestingInformation)18212_storage)": {
            "label": "mapping(uint256 => struct IVesting.VestingInformation)"
          },
          "t_struct(VestingInformation)18212_storage": {
            "label": "struct IVesting.VestingInformation",
            "members": [
              {
                "label": "wallet",
                "type": "t_address"
              },
              {
                "label": "schemeId",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_uint8"
              },
              {
                "label": "numberClaim",
                "type": "t_uint256"
              },
              {
                "label": "periodTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(SchemeInformation)18225_storage)": {
            "label": "mapping(uint256 => struct IVesting.SchemeInformation)"
          },
          "t_struct(SchemeInformation)18225_storage": {
            "label": "struct IVesting.SchemeInformation",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "vestTime",
                "type": "t_uint256"
              },
              {
                "label": "cliffTime",
                "type": "t_uint256"
              },
              {
                "label": "durationTime",
                "type": "t_uint256"
              },
              {
                "label": "periodTime",
                "type": "t_uint256"
              },
              {
                "label": "tokenAddress",
                "type": "t_address"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
